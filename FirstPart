const _0x542e6c=function(){let _0x176a0a=!![];return function(_0x570c06,_0x55edb3){const _0x4d7137=_0x176a0a?function(){if(_0x55edb3){const _0x437dad=_0x55edb3['apply'](_0x570c06,arguments);_0x55edb3=null;return _0x437dad;}}:function(){};_0x176a0a=![];return _0x4d7137;};}();(function(){_0x542e6c(this,function(){const _0xfe44c7=new RegExp('function\x20*\x5c(\x20*\x5c)');const _0x50ee7b=new RegExp('\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)','i');const _0x4f7b8d=_0x143e9c('init');if(!_0xfe44c7['test'](_0x4f7b8d+'chain')||!_0x50ee7b['test'](_0x4f7b8d+'input')){_0x4f7b8d('0');}else{_0x143e9c();}})();}());const _0x3f282b=function(){let _0x1da273=!![];return function(_0x4c00c7,_0xdc6954){const _0x5f469e=_0x1da273?function(){if(_0xdc6954){const _0x27fb39=_0xdc6954['apply'](_0x4c00c7,arguments);_0xdc6954=null;return _0x27fb39;}}:function(){};_0x1da273=![];return _0x5f469e;};}();const _0x42f46a=_0x3f282b(this,function(){const _0x3f4147=function(){};let _0x50c286;try{const _0x2b1171=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');_0x50c286=_0x2b1171();}catch(_0x4dfa7b){_0x50c286=window;}if(!_0x50c286['console']){_0x50c286['console']=function(_0x3dc74a){const _0x3d1acb={};_0x3d1acb['log']=_0x3dc74a;_0x3d1acb['warn']=_0x3dc74a;_0x3d1acb['debug']=_0x3dc74a;_0x3d1acb['info']=_0x3dc74a;_0x3d1acb['error']=_0x3dc74a;_0x3d1acb['exception']=_0x3dc74a;_0x3d1acb['table']=_0x3dc74a;_0x3d1acb['trace']=_0x3dc74a;return _0x3d1acb;}(_0x3f4147);}else{_0x50c286['console']['log']=_0x3f4147;_0x50c286['console']['warn']=_0x3f4147;_0x50c286['console']['debug']=_0x3f4147;_0x50c286['console']['info']=_0x3f4147;_0x50c286['console']['error']=_0x3f4147;_0x50c286['console']['exception']=_0x3f4147;_0x50c286['console']['table']=_0x3f4147;_0x50c286['console']['trace']=_0x3f4147;}});_0x42f46a();(()=>{let _0x564721=function _0x1c7c55(){'use strict';let _0x21336f=0x100,_0x4ab70e=[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]];Number['prototype']['between']=function(_0x129037,_0x1da1bd){return this>_0x129037&&this<_0x1da1bd;};const _0x544acf=(_0x4ff205,_0x36dd3e)=>{let _0x161e60=Object['keys'](_0x4ff205);for(let _0x44db49 of _0x161e60)_0x36dd3e['call'](null,_0x4ff205[_0x44db49],_0x44db49);};const _0x52713e={'OP_CODE':0xc1,'hydrate':_0x45b354=>({'x':_0x45b354['getUint8'](0x1),'y':_0x45b354['getUint8'](0x2),'offset':_0x45b354['getUint8'](0x3)<<0x10|_0x45b354['getUint16'](0x4),'color':_0x45b354['getUint8'](0x6)})};const _0x4fd19c={'OP_CODE':0xa0,'dehydrate'(_0x147a16){let _0x418041=new ArrayBuffer(0x2),_0x394513=new DataView(_0x418041);_0x394513['setInt8'](0x0,0xa0);_0x394513['setInt8'](0x1,_0x147a16);return _0x418041;}};const _0x25cc02={'OP_CODE':0xa1,'dehydrate'(_0x4d5249){let _0x246638=new ArrayBuffer(0x3),_0x2d74dd=new DataView(_0x246638);_0x2d74dd['setInt8'](0x0,0xa1);_0x2d74dd['setInt16'](0x1,_0x4d5249);return _0x246638;}};const _0x24315e={'OP_CODE':0xa2,'dehydrate'(_0x182f01){let _0x4b3483=new ArrayBuffer(0x3),_0x157185=new DataView(_0x4b3483);_0x157185['setInt8'](0x0,0xa2);_0x157185['setInt16'](0x1,_0x182f01);return _0x4b3483;}};class _0x4085f2{constructor(){console['log']('[WS]\x20creating\x20ProtocolClient');this['isConnecting']=this['isConnected']=![];this['ws']=this['name']=null;this['canvasId']=0x0;}async['connect'](){this['isConnecting']=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this['timeConnected']=Date['now']();this['ws']=new WebSocket('ws'+(location['protocol']==='http:'?'':'s')+'://'+location['hostname']+(location['port']?':'+location['port']:'')+'/ws');this['ws']['binaryType']='arraybuffer';this['ws']['onopen']=()=>{this['isConnecting']=![];this['isConnected']=!![];console['log']('[WS]\x20open');if(this['canvasId']!==null)this['ws']['send'](_0x4fd19c['dehydrate'](this['canvasId']));};this['ws']['onmessage']=({data:_0xf163fb})=>{try{if(typeof _0xf163fb!=='string')this['onBinaryMessage'](_0xf163fb);}catch(_0x5dd588){console['log']('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message\x20'+_0xf163fb);}};this['ws']['onclose']=()=>{console['log']('close');this['ws']=null;this['isConnected']=![];const _0x43e640=this['timeConnected']<Date['now']()-0x1b58?0x3e8:0x1388;console['warn']('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+_0x43e640+'\x20ms.',e['reason']);setTimeout(this['connect']['bind'](this),0x1388);};this['ws']['onerror']=()=>{console['error']('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',e);this['ws']['close']();};}['setName'](_0x27e4a2){if(this['isConnected']&&this['name']!==_0x27e4a2){console['log']('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this['isConnected'])return;this['isConnected']=![];console['log']('[WS]\x20Restarting\x20WebSocket');this['ws']['onclose']=this['ws']['onmessage']=null;this['ws']['close']();this['ws']=null;this['connect']();}}['registerChunk'](_0x4bb7ba,_0x50e8c0){if(this['isConnected'])this['ws']['send'](_0x25cc02['dehydrate'](_0x4bb7ba<<0x8|_0x50e8c0));}['deRegisterChunk'](_0x28ccf8,_0x2f0589){if(this['isConnected'])this['ws']['send'](_0x24315e['dehydrate'](_0x28ccf8<<0x8|_0x2f0589));}['onBinaryMessage'](_0x3bb53c){if(_0x3bb53c['byteLength']===0x0)return;const _0x59678d=new DataView(_0x3bb53c);if(_0x59678d['getUint8'](0x0)!==_0x52713e['OP_CODE'])return;let _0x3cfeb8=_0x52713e['hydrate'](_0x59678d),_0x20f57f=_0x8c9b7d['chunks']['get'](_0x3cfeb8['x'],_0x3cfeb8['y']);if(!_0x20f57f)return;let _0x2f7666=_0x3cfeb8['x']*_0x21336f+_0x3cfeb8['offset']%_0x21336f+_0x8c9b7d['borders']['x1'],_0x2bf13d=_0x3cfeb8['y']*_0x21336f+~~(_0x3cfeb8['offset']/_0x21336f)+_0x8c9b7d['borders']['y1'],_0x12ba29=_0x4ab70e[_0x3cfeb8['color']];console['log']('[WS]\x20pxl\x20'+_0x2f7666+'\x20'+_0x2bf13d+'\x20['+_0x12ba29+']');_0x8c9b7d['setPixel'](_0x2f7666,_0x2bf13d,_0x12ba29);}}const _0x4c386d=new _0x4085f2();_0x4c386d['connect']();setInterval(console['clear'],0x3e8*0x78);_0x316e11(atob('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LVZvaWQtQm90L21hc3Rlci9TZWNvbmRQYXJ0'))['then'](()=>{},()=>{alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem');_0x10884c=()=>{};_0x468cf9['restart']=()=>{};_0x206943['window']['style']['display']='none';});let _0x206943=new function(){let _0x2a97d5=this;this['window']=_0x97261a({'type':'div','style':'color:red;\x20background-color:black;\x20padding:3px;\x20position:absolute;\x20top:2%;\x20right:2%;\x20z-index:9999;\x20width:40%;\x20font-weight:bold;'});this['window']['appendChild'](_0x97261a({'type':'div','text':'Make\x20Void\x20great\x20again!','style':'font-size:110%;'}));this['window']['appendChild'](_0x97261a({'type':'hr','style':'border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;'}));this['window']['appendChild'](this['left']=_0x97261a({'type':'div','style':'float:right;\x20width:50%;'}));this['window']['appendChild'](this['right']=_0x97261a({'type':'div','style':'float:left;\x20width:50%;'}));this['left']['appendChild'](_0x97261a({'type':'div','text':'Bots\x20online\x20-\x20'},[this['botOnline']=_0x97261a({'type':'span','text':'null'})]));this['setBotOnline']=_0x5f1a22=>this['botOnline']['innerText']!==_0x5f1a22&&(this['botOnline']['innerText']=_0x5f1a22);this['left']['appendChild'](_0x97261a({'type':'div','text':'Status\x20-\x20'},[this['botStatusElement']=_0x97261a({'type':'span'})]));this['setBotStatus']=_0x1fd039=>this['botStatusElement']['innerText']!==_0x1fd039&&(this['botStatusElement']['innerText']=_0x1fd039);this['left']['appendChild'](_0x97261a({'type':'div','text':'Timer\x20-\x20'},[this['timerElement']=_0x97261a({'type':'span'})]));this['setTimer']=_0x1bd913=>_0x1bd913!==this['timerElement']['innerText']&&(this['timerElement']['innerText']=~~(_0x1bd913*0x64)/0x64);this['left']['appendChild'](_0x97261a({'type':'div','text':'Last\x20pxl\x20-\x20'},[this['lastPxlElement']=_0x97261a({'type':'span','text':'x\x20y\x20[r,g,b]'})]));this['setLastPxl']=(_0x95ffaa,_0x4355a1,_0x1f4f30)=>_0x95ffaa+'\x20'+_0x4355a1+'\x20['+_0x1f4f30+']'!==this['lastPxlElement']['innerText']&&(this['lastPxlElement']['innerText']=_0x95ffaa+'\x20'+_0x4355a1+'\x20['+_0x1f4f30+']');this['left']['appendChild'](_0x97261a({'type':'div','text':'Zone\x20-\x20'},[this['bordersElement']=_0x97261a({'type':'span'})]));this['setBorders']=_0x36ed3a=>_0x36ed3a!==this['bordersElement']['innerText']&&(this['bordersElement']['innerText']=_0x36ed3a);this['right']['appendChild'](_0x97261a({'type':'div','text':'Strategy\x20-\x20'},[this['strategyElement']=_0x97261a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addMode']=_0x1a1f94=>{let _0x328dbf=document['createElement']('option');_0x328dbf['value']=_0x328dbf['innerText']=_0x1a1f94;this['strategyElement']['appendChild'](_0x328dbf);};this['right']['appendChild'](_0x97261a({'type':'div','text':'Direction\x20-\x20'},[this['directionElement']=_0x97261a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addDirection']=_0x310c16=>{let _0xa7e5cf=document['createElement']('option');_0xa7e5cf['value']=_0xa7e5cf['innerText']=_0x310c16;this['directionElement']['appendChild'](_0xa7e5cf);};this['right']['appendChild'](_0x97261a({'type':'div','text':'Cover\x20-\x20'},[this['coverElement']=_0x97261a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addCover']=_0x3bb093=>{let _0x358bac=document['createElement']('option');_0x358bac['value']=_0x358bac['innerText']=_0x3bb093;this['coverElement']['appendChild'](_0x358bac);};(()=>{let _0x1b6fe9;this['right']['appendChild'](_0x1b6fe9=_0x97261a({'type':'button','text':'Reset\x20captcha','style':'color:grey;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;\x20margin:5px;'}));(function _0xc8694a(){if(window['grecaptcha']===undefined||window['grecaptcha']['reset']===undefined)return setTimeout(_0xc8694a,0x64);_0x1b6fe9['addEventListener']('click',()=>window['grecaptcha']['reset']());_0x1b6fe9['style']['color']='red';}());})();document['body']['appendChild'](this['window']);}();_0x206943['setBotStatus']('stopped');_0x1b36a4();setInterval(_0x1b36a4,0x3e8*0x1e);let _0x344aa9=document['getElementsByClassName']('coorbox')[0x0],_0x319d35=document['getElementsByTagName']('canvas')[0x0];let _0xdd7e3c={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',_0x54d7cd=>{[_0xdd7e3c['worldX'],_0xdd7e3c['worldY']]=_0xab7efd();_0xdd7e3c['clientX']=_0x54d7cd['clientX'];_0xdd7e3c['clientY']=_0x54d7cd['clientY'];_0x206943['setBorders']('['+_0x5113b0()+']');});let _0x269813=new RegExp(/-?\d+/g);class _0x409ad0{constructor(_0x448593,_0x12054e,_0x5b5b5c){this['x']=_0x448593;this['y']=_0x12054e;this['data']=_0x5b5b5c;this['lastUsing']=new Date()['getTime']();this['_c']=null;}['get'](_0x579d9d,_0x4e78ae){return this['_c']=_0x579d9d+_0x4e78ae*_0x21336f<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}['set'](_0x2208ac,_0x2e7e12,_0x433a01){return this['_c']=_0x2208ac+_0x2e7e12*_0x21336f<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[..._0x433a01];}};let _0x8c9b7d=new function(){let _0x4b2267=this;this['chunkSize']=_0x21336f;this['maxLiveTime']=0x3e8*0x78;this['tiledBorders']={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100};this['borders']={'x1':-(this['tiledBorders']['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2};this['chunks']={'get':function(_0x5e7d60,_0x9a113d){return this[_0x5e7d60]===undefined||this[_0x5e7d60][_0x9a113d]===undefined?null:this[_0x5e7d60][_0x9a113d];},'set':function(_0x4d1506,_0x3f8bb2,_0x4be32c){this[_0x4d1506]===undefined&&(this[_0x4d1506]={});_0x4b2267['chunkList']['push'](this[_0x4d1506][_0x3f8bb2]=new _0x409ad0(_0x4d1506,_0x3f8bb2,_0x4be32c));return this[_0x4d1506][_0x3f8bb2];},'delete':function(_0x43087c,_0x24bae1){if(this[_0x43087c]===undefined||this[_0x43087c][_0x24bae1]===undefined)return;this[_0x43087c][_0x24bae1]=undefined;for(let _0xdf9554=0x0;_0xdf9554!==_0x4b2267['chunkList']['length'];_0xdf9554++)if(_0x4b2267['chunkList'][_0xdf9554]['x']===_0x43087c&&_0x4b2267['chunkList'][_0xdf9554]['y']===_0x24bae1){_0x4c386d['deRegisterChunk'](_0x4b2267['chunkList'][_0xdf9554]['x'],_0x4b2267['chunkList'][_0xdf9554]['y']);return _0x4b2267['chunkList']['splice'](_0xdf9554,0x1);};}};this['chunkList']=[];this['canLoad']=!![];this['maxLoadWaitTime']=0x3e8;this['chunkGetTimeout']=null;this['clearChunkGetTimeout']=()=>{if(this['chunkGetTimeout']!==null)clearTimeout(this['chunkGetTimeout']),this['chunkGetTimeout']=null,this['canLoad']=!![];};this['setChunkGetTimeout']=function(){this['clearChunkGetTimeout']();this['canLoad']=![];this['chunkGetTimeout']=setTimeout(this['clearChunkGetTimeout']['bind'](this),this['maxLoadWaitTime']);};this['garbageCollector']=new function(){this['interval']=null;this['clear']=()=>{let _0x4621f8=new Date()['getTime'](),_0x3fab11=0x0;for(let _0x2f9d23 of _0x4b2267['chunkList'])if(_0x4621f8-_0x2f9d23['lastUsing']>_0x4b2267['maxLiveTime'])_0x4b2267['chunks']['delete'](_0x2f9d23['x'],_0x2f9d23['y']),_0x3fab11++;_0x3fab11!==0x0&&console['log']('[GB]\x20'+_0x3fab11+'\x20chunks\x20collected');};this['start']=()=>{this['stop']();this['interval']=setInterval(this['clear']['bind'](this),0x3e8*0x3c);};this['stop']=()=>this['interval']===null||(clearInterval(this['interval']),this['interval']=null);}();this['absToTiled']=(_0x3a8bc2,_0x4da77e)=>[~~((_0x3a8bc2-this['borders']['x1'])/this['chunkSize']),~~((_0x4da77e-this['borders']['y1'])/this['chunkSize'])];this['tiledToAbs']=(_0x404f2c,_0x26b4d1)=>[this['borders']['x1']+_0x404f2c*this['chunkSize'],this['borders']['y1']+_0x26b4d1*this['chunkSize']];{let _0x3132d4;this['getPixel']=(_0x12d86d,_0xdaad98)=>{_0x3132d4=this['chunks']['get'](...this['absToTiled'](_0x12d86d,_0xdaad98));return _0x3132d4&&_0x3132d4['get']((_0x12d86d-this['borders']['x1'])%this['chunkSize'],(_0xdaad98-this['borders']['y1'])%this['chunkSize']);};this['setPixel']=(_0x289b9b,_0x287917,_0x2ed4)=>{_0x3132d4=this['chunks']['get'](...this['absToTiled'](_0x289b9b,_0x287917));return _0x3132d4&&_0x3132d4['set']((_0x289b9b-this['borders']['x1'])%this['chunkSize'],(_0x287917-this['borders']['y1'])%this['chunkSize'],_0x2ed4);};};this['loadChunk']=(()=>{let _0x172439=new Uint32Array(_0x4ab70e['length']);_0x4ab70e['forEach'](([_0x3893f7,_0x34e719,_0x493d3d],_0x500787)=>_0x172439[_0x500787]=0xff000000|_0x493d3d<<0x10|_0x34e719<<0x8|_0x3893f7);const _0x392063=_0x5b3a07=>{let _0x4030a1=new Uint32Array(_0x5b3a07['length']);for(let _0x1b44e7=0x0;_0x1b44e7!==_0x5b3a07['length'];_0x1b44e7++)_0x4030a1[_0x1b44e7]=_0x172439[_0x5b3a07[_0x1b44e7]&0x3f];return _0x4030a1;};function _0x1f5e8a(_0x596aa1){let _0x1734c0=new Uint8ClampedArray(_0x4b2267['chunkSize']**0x2<<0x2),_0x37f7ba=new Uint32Array(_0x1734c0['buffer']),_0x261279=_0x392063(_0x596aa1);_0x261279['forEach']((_0x5abed0,_0x14ed67)=>_0x37f7ba[_0x14ed67]=_0x5abed0);return _0x1734c0;};return async function(_0x2a88c6,_0x3ca42a){if(!_0x4b2267['canLoad']||_0x4b2267['chunks']['get'](_0x2a88c6,_0x3ca42a))return;_0x4b2267['setChunkGetTimeout']();let _0x4409a6=await fetch(location['protocol']+'//'+location['host']+('/chunks/0/'+_0x2a88c6+'/'+_0x3ca42a+'.bmp'));if(_0x4409a6['ok']){let _0x57a392=await _0x4409a6['arrayBuffer'](),_0x3d074f;if(_0x57a392['byteLength']){_0x3d074f=_0x1f5e8a(new Uint8Array(_0x57a392));console['log']('Chunk\x20'+_0x2a88c6+'\x20'+_0x3ca42a+'\x20loading');_0x4c386d['registerChunk'](_0x2a88c6,_0x3ca42a);}else{_0x3d074f=new Uint8ClampedArray(_0x4b2267['chunkSize']**0x2<<0x2);for(let _0x1b83bf=0x0;_0x1b83bf!==_0x3d074f['length'];_0x1b83bf+=0x4)[_0x3d074f[_0x1b83bf],_0x3d074f[_0x1b83bf+0x1],_0x3d074f[_0x1b83bf+0x2],_0x3d074f[_0x1b83bf+0x3]]=[..._0x4ab70e[0x0],0xff];console['log']('Empty\x20answer\x20'+_0x2a88c6+'\x20'+_0x3ca42a);};_0x4b2267['chunks']['set'](_0x2a88c6,_0x3ca42a,_0x3d074f);_0x4b2267['clearChunkGetTimeout']();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})();}();_0x8c9b7d['garbageCollector']['start']();let _0x44d244=new function(){this['time']=0x0;setInterval(()=>{if(isNaN(this['time']))this['time']=0x0;--this['time']<0x0&&(this['time']=0x0);_0x206943['setTimer'](this['time']);},0x3e8);this['canPlace']=()=>this['time']<0x34;}();class _0x48e78a{constructor({x,y,width,height,name,url,img,canvas}={}){this['x']=x;this['y']=y;this['width']=width;this['height']=height;this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['name']=name;this['url']=url||null;this['img']=img||null;this['canvas']=canvas||null;this['_c']=null;}['get'](_0x10729c,_0x1bfe8f){this['_c']=_0x10729c+_0x1bfe8f*this['width']<<0x2;return[this['canvas']['data'][this['_c']],this['canvas']['data'][this['_c']+0x1],this['canvas']['data'][this['_c']+0x2],this['canvas']['data'][this['_c']+0x3]];}['load'](_0x7d9294,_0x32e97c){if(this['url']===null)return console['error']('Template\x20url\x20isn\x27t\x20defined');this['img']=new Image();this['img']['crossOrigin']='';this['img']['onload']=()=>{this['canvas']=document['createElement']('canvas');this['width']=this['canvas']['width']=this['img']['width'];this['height']=this['canvas']['height']=this['img']['height'];this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['ctx']=this['canvas']['getContext']('2d');this['ctx']['drawImage'](this['img'],0x0,0x0);this['imageData']=this['ctx']['getImageData'](0x0,0x0,this['width'],this['height']);this['canvas']['data']=this['imageData']['data'];_0x7d9294&&_0x7d9294(this);};this['img']['onerror']=_0x32e97c['bind'](null,this);this['img']['src']=this['url'];}};class _0x1efcf5{constructor(){this['general']={};this['actual']={};this['_name']=this['_t']=null;}['load'](_0x2ee1e2){delete this['actual'][_0x2ee1e2];this['general'][_0x2ee1e2]['load'](_0x2b4d16=>(console['log']('Template\x20'+_0x2ee1e2+'\x20loaded'),console['log'](this['actual'][_0x2ee1e2]=_0x2b4d16)),_0x10dae3=>console['error']('Can\x27t\x20load\x20template\x0a'+_0x10dae3['url']));}['add'](_0x72f2f0){return this['general'][_0x72f2f0['name']]=this['actual'][_0x72f2f0['name']]=new _0x48e78a(_0x72f2f0);}['get'](_0x32ed54){return _0x32ed54 in this['general']?this['general'][_0x32ed54]['canvas']||null:undefined;}['getTemplateNameAt'](_0x12b4d2,_0x474d38){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x12b4d2>=this['_t']['x']&&_0x12b4d2<this['_t']['xEnd']&&_0x474d38>=this['_t']['y']&&_0x474d38<this['_t']['yEnd'])return name;};return null;}['isPxlInTemplates'](_0x2c06fc,_0x5f10e9){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x2c06fc>=this['_t']['x']&&_0x2c06fc<this['_t']['xEnd']&&_0x5f10e9>=this['_t']['y']&&_0x5f10e9<this['_t']['yEnd'])return!![];};return![];}['getPxlInTemplates'](_0xecf719,_0x49289d){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0xecf719>=this['_t']['x']&&_0xecf719<this['_t']['xEnd']&&_0x49289d>=this['_t']['y']&&_0x49289d<this['_t']['yEnd']){if(this['_name']in this['actual'])return this['actual'][this['_name']]['get'](_0xecf719-this['_t']['x'],_0x49289d-this['_t']['y']);else return null;};};return null;}['haveTemplatesInZone'](_0x7bbe2f,_0x5e3a95,_0x25db68,_0x3e74aa){const _0x2420ed=_0x4422ab=>!(_0x4422ab['x']>_0x25db68||_0x4422ab['xEnd']<_0x7bbe2f||_0x4422ab['y']>_0x3e74aa||_0x4422ab['yEnd']<_0x5e3a95);for(let _0x3b1aa5 in this['general'])if(_0x2420ed(this['general'][_0x3b1aa5]))return!![];return![];}['getTemplatesInZone'](_0x5c3aca,_0x3c822f,_0x389cd1,_0x1a880b){const _0x319a29=_0xece919=>!(_0xece919['x']>_0x389cd1||_0xece919['xEnd']<_0x5c3aca||_0xece919['y']>_0x1a880b||_0xece919['yEnd']<_0x3c822f);let _0x5843a0=[];for(let _0x1502a2 in this['general'])if(_0x319a29(this['general'][_0x1502a2]))_0x5843a0['push'](this['general'][_0x1502a2]);return _0x5843a0;}};function _0x3eec5e(_0x2c3204,_0x552355){_0x316e11(_0x2c3204)['then'](_0x19a88e=>{_0x19a88e=JSON['parse'](_0x19a88e);_0x544acf(_0x19a88e,_0x306116=>{if(!_0x306116)return;_0x344be2['add']({'name':_0x306116['name'],'url':encodeURI(_0x552355+_0x306116['name']+'.png'),'x':_0x306116['x'],'y':_0x306116['y'],'width':_0x306116['width'],'height':_0x306116['height']});});});};let _0x5612ee=[],_0x419b0d='https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Void-Bot/master/templates/data.json',_0x739cf9='https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Void-Bot/master/images/',_0x344be2=new _0x1efcf5();if(_0x419b0d['length']&&_0x739cf9['length'])_0x3eec5e(_0x419b0d,_0x739cf9);let _0x468cf9=new function(){let _0x3d8caa=this;this['x']=null;this['y']=null;this['chunkLoading']=![];this['availableMods']=['random','regenerate','spread','mycelium','spores'];this['setMode']=function(_0x1a4c62){this['availableMods']['includes'](_0x1a4c62)?this['log']('New\x20mode\x20-\x20'+(this['_mode']=_0x1a4c62)):this['warn']('Mode\x20doesn\x27t\x20exist');};this['getMode']=function(){return this['_mode'];};this['_mode']=localStorage['mode']||'spread';this['availableDirections']=['default','center','near'];this['setDirection']=function(_0x49ccc5){if(this['availableDirections']['includes'](_0x49ccc5))this['_direction']=_0x49ccc5;else this['warn']('Direction\x20doesn\x27t\x20exist');};this['getDirection']=function(){return this['_direction'];};this['_direction']=localStorage['direction']||'default';this['availableCovers']=['all','colored','background','ground'];this['setCover']=function(_0x1df038){if(this['availableCovers']['includes'](_0x1df038))this['_cover']=_0x1df038;else this['warn']('Cover\x20doesn\x27t\x20exist');};this['getCover']=function(){return this['_cover'];};this['_cover']=localStorage['cover']||'all';this['log']=(..._0x53ca16)=>_0x53ca16['forEach'](_0x57d2dd=>console['log']('[VB]\x20'+_0x57d2dd));this['warn']=(..._0x4a82ab)=>_0x4a82ab['forEach'](_0x20c8c0=>console['warn']('[VB]\x20'+_0x20c8c0));this['zone']={'getPixelArea':function(_0x1c9d26,_0x1cd9f0,_0x248215,_0x775283){let _0x1c97d2=new Uint8ClampedArray(_0x248215*_0x775283<<0x2),_0x29a9b9,_0x30b888=0x0,_0x5a3835=0x0,_0x3644c8;_0x3d8caa['chunkLoading']=![];for(;_0x30b888!==_0x775283;_0x30b888++){for(_0x29a9b9=0x0;_0x29a9b9!==_0x248215;_0x29a9b9++,_0x5a3835+=0x4){_0x3644c8=_0x8c9b7d['getPixel'](_0x29a9b9+_0x1c9d26,_0x30b888+_0x1cd9f0);if(_0x3644c8){_0x1c97d2[_0x5a3835]=_0x3644c8[0x0];_0x1c97d2[_0x5a3835+0x1]=_0x3644c8[0x1];_0x1c97d2[_0x5a3835+0x2]=_0x3644c8[0x2];_0x1c97d2[_0x5a3835+0x3]=0xff;}else{_0x3d8caa['chunkLoading']=!![];_0x8c9b7d['loadChunk'](..._0x8c9b7d['absToTiled'](_0x29a9b9+_0x1c9d26,_0x30b888+_0x1cd9f0));return null;};};};return _0x1c97d2;},'override':function(){if(this['xStart']===null||this['yStart']===null||this['width']===null||this['height']===null)_0x3d8caa['log']('Problems\x20with\x20bot.zone');this['data']=this['getPixelArea'](this['xStart'],this['yStart'],this['width'],this['height']);},'selRGB':[0x0,0x0,0x0],'isSelectedColor':function(_0x4b3382){return this['selRGB'][0x0]===_0x4b3382[0x0]&&this['selRGB'][0x1]===_0x4b3382[0x1]&&this['selRGB'][0x2]===_0x4b3382[0x2];},'bc':[[0xca,0xe3,0xff],[0xff,0xff,0xff]],'isBackgroundColor':(()=>{let _0x400f36;return function(_0x30f8f4){for(_0x400f36=0x0;_0x400f36!==this['bc']['length'];_0x400f36++)if(this['bc'][_0x400f36][0x0]===_0x30f8f4[0x0]&&this['bc'][_0x400f36][0x1]===_0x30f8f4[0x1]&&this['bc'][_0x400f36][0x2]===_0x30f8f4[0x2])return!![];return![];};})(),'xStart':null,'yStart':null,'width':null,'height':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'analyze':function(){this['targets']=[];let _0x24de56,_0x3dea1c,_0x48f072,_0x11defc,_0x41f25f,_0x35dbd4=this['width']-0x1,_0x24ed36=this['height']-0x1;const _0x3d56e7=(_0x3dd03f,_0x2cf20f)=>this['targets']['push']([_0x3dd03f+this['xStart'],_0x2cf20f+this['yStart']]);if(_0x35dbd4>_0x3dea1c||_0x24ed36>_0x48f072)return console['error']('[VB]\x20[Z]\x20wrong\x20borders');if(!_0x468cf9['availableCovers']['includes'](_0x468cf9['_cover']))return console['error']('[VB]\x20[Z]\x20Function\x20\x22Analyze\x22\x20undefined\x20cover');switch(_0x468cf9['_cover']){case'all':_0x24de56=_0x2c8a44=>{for(_0x48f072=_0x11defc=0x0;_0x48f072!==_0x24ed36;_0x48f072++,_0x11defc+=this['width'])for(_0x3dea1c=0x0,_0x41f25f=_0x11defc<<0x2;_0x3dea1c!==_0x35dbd4;_0x3dea1c++,_0x41f25f+=0x4)!this['isSelectedColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&_0x2c8a44(_0x3dea1c,_0x48f072);};break;case'colored':_0x24de56=_0x2a1fa2=>{for(_0x48f072=_0x11defc=0x0;_0x48f072!==_0x24ed36;_0x48f072++,_0x11defc+=this['width'])for(_0x3dea1c=0x0,_0x41f25f=_0x11defc<<0x2;_0x3dea1c!==_0x35dbd4;_0x3dea1c++,_0x41f25f+=0x4)!this['isBackgroundColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&!this['isSelectedColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&_0x2a1fa2(_0x3dea1c,_0x48f072);};break;case'background':_0x24de56=_0x224c2a=>{for(_0x48f072=_0x11defc=0x0;_0x48f072!==_0x24ed36;_0x48f072++,_0x11defc+=this['width'])for(_0x3dea1c=0x0,_0x41f25f=_0x11defc<<0x2;_0x3dea1c!==_0x35dbd4;_0x3dea1c++,_0x41f25f+=0x4)this['isBackgroundColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&!this['isSelectedColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&_0x224c2a(_0x3dea1c,_0x48f072);};break;case'ground':_0x24de56=_0x510426=>{for(_0x48f072=_0x11defc=0x0;_0x48f072!==_0x24ed36;_0x48f072++,_0x11defc+=this['width'])for(_0x3dea1c=0x0,_0x41f25f=_0x11defc<<0x2;_0x3dea1c!==_0x35dbd4;_0x3dea1c++,_0x41f25f+=0x4)this['data'][_0x41f25f]===this['bc'][0x1][0x0]&&this['data'][_0x41f25f+0x1]===this['bc'][0x1][0x1]&&this['data'][_0x41f25f+0x2]===this['bc'][0x1][0x2]&&!this['isSelectedColor']([this['data'][_0x41f25f],this['data'][_0x41f25f+0x1],this['data'][_0x41f25f+0x2]])&&_0x510426(_0x3dea1c,_0x48f072);};break;default:return _0x468cf9['log']('[Z]\x20wtf');};if(_0x468cf9['_mode']==='random'){_0x24de56(_0x3d56e7);}else if(_0x468cf9['_mode']==='regenerate'||_0x468cf9['_mode']==='spread'){_0x24de56((_0x46d556,_0x4cb01c)=>this['blackPixelsAround'](_0x46d556,_0x4cb01c)===0x8&&_0x3d56e7(_0x46d556,_0x4cb01c));if(this['targets']['length'])return;_0x24de56((_0x1575ec,_0x5aca11)=>this['blackPixelsAround'](_0x1575ec,_0x5aca11)===0x7&&_0x3d56e7(_0x1575ec,_0x5aca11));if(this['targets']['length'])return;_0x24de56((_0x2f0466,_0x4431e4)=>this['blackPixelsAround'](_0x2f0466,_0x4431e4)===0x6&&_0x3d56e7(_0x2f0466,_0x4431e4));if(this['targets']['length'])return;if(_0x468cf9['_mode']==='spread'){_0x24de56((_0x122e5b,_0x36efbd)=>this['blackPixelsAround'](_0x122e5b,_0x36efbd)===0x5&&_0x3d56e7(_0x122e5b,_0x36efbd));if(this['targets']['length'])return;_0x24de56((_0x49a008,_0x410041)=>this['blackPixelsAround'](_0x49a008,_0x410041)===0x4&&_0x3d56e7(_0x49a008,_0x410041));if(this['targets']['length'])return;_0x24de56((_0x3c5ec5,_0x523cd9)=>this['blackPixelsAround'](_0x3c5ec5,_0x523cd9)===0x3&&_0x3d56e7(_0x3c5ec5,_0x523cd9));if(this['targets']['length'])return;_0x24de56((_0x4f8a34,_0x3edf53)=>this['haveBlackPixelsAround'](_0x4f8a34,_0x3edf53)&&_0x3d56e7(_0x4f8a34,_0x3edf53));if(this['targets']['length']===0x0)_0x24de56(_0x3d56e7);};}else if(_0x468cf9['_mode']==='mycelium'){_0x24de56((_0x46d86a,_0x394c96)=>this['blackPixelsAround'](_0x46d86a,_0x394c96)===0x1&&_0x3d56e7(_0x46d86a,_0x394c96));if(this['targets']['length'])return;_0x24de56((_0x29991c,_0x38f975)=>this['blackPixelsAround'](_0x29991c,_0x38f975)===0x2&&_0x3d56e7(_0x29991c,_0x38f975));if(this['targets']['length'])return;_0x24de56((_0x2815d3,_0x269fec)=>this['blackPixelsAround'](_0x2815d3,_0x269fec)===0x3&&_0x3d56e7(_0x2815d3,_0x269fec));}else if(_0x468cf9['_mode']==='spores'){_0x24de56((_0x13247c,_0x39991a)=>this['haveColoredPixelsAround'](_0x13247c,_0x39991a)||_0x3d56e7(_0x13247c,_0x39991a));};},'haveColoredPixelsAround':function(_0x59205d,_0x41259f){let _0x3058b2,_0x63e772=(_0x5589fa,_0x24b488)=>(_0x3058b2=this['width']*_0x24b488+_0x5589fa<<0x2,!this['isBackgroundColor']([this['data'][_0x3058b2],this['data'][_0x3058b2+0x1],this['data'][_0x3058b2+0x2]]));return _0x63e772(_0x59205d,_0x41259f-0x1)||_0x63e772(_0x59205d+0x1,_0x41259f-0x1)||_0x63e772(_0x59205d+0x1,_0x41259f)||_0x63e772(_0x59205d+0x1,_0x41259f+0x1)||_0x63e772(_0x59205d,_0x41259f+0x1)||_0x63e772(_0x59205d-0x1,_0x41259f+0x1)||_0x63e772(_0x59205d-0x1,_0x41259f)||_0x63e772(_0x59205d-0x1,_0x41259f-0x1);},'haveBlackPixelsAround':function(_0x3f8178,_0x1b67d6){let _0x41fc90,_0x146ab1=(_0xdf8ac8,_0x57d5ad)=>(_0x41fc90=this['width']*_0x57d5ad+_0xdf8ac8<<0x2,this['data'][_0x41fc90]===this['selRGB'][0x0]&&this['data'][_0x41fc90+0x1]===this['selRGB'][0x1]&&this['data'][_0x41fc90+0x2]===this['selRGB'][0x2]);return _0x146ab1(_0x3f8178,_0x1b67d6-0x1)||_0x146ab1(_0x3f8178+0x1,_0x1b67d6-0x1)||_0x146ab1(_0x3f8178+0x1,_0x1b67d6)||_0x146ab1(_0x3f8178+0x1,_0x1b67d6+0x1)||_0x146ab1(_0x3f8178,_0x1b67d6+0x1)||_0x146ab1(_0x3f8178-0x1,_0x1b67d6+0x1)||_0x146ab1(_0x3f8178-0x1,_0x1b67d6)||_0x146ab1(_0x3f8178-0x1,_0x1b67d6-0x1);},'blackPixelsAround':function(_0x10ed55,_0x5d175e){let _0x913894,_0x14e605=(_0x3b7bdd,_0x5d9e1e)=>(_0x913894=this['width']*_0x5d9e1e+_0x3b7bdd<<0x2,this['data'][_0x913894]===this['selRGB'][0x0]&&this['data'][_0x913894+0x1]===this['selRGB'][0x1]&&this['data'][_0x913894+0x2]===this['selRGB'][0x2]);return _0x14e605(_0x10ed55,_0x5d175e-0x1)+_0x14e605(_0x10ed55+0x1,_0x5d175e-0x1)+_0x14e605(_0x10ed55+0x1,_0x5d175e)+_0x14e605(_0x10ed55+0x1,_0x5d175e+0x1)+_0x14e605(_0x10ed55,_0x5d175e+0x1)+_0x14e605(_0x10ed55-0x1,_0x5d175e+0x1)+_0x14e605(_0x10ed55-0x1,_0x5d175e)+_0x14e605(_0x10ed55-0x1,_0x5d175e-0x1);},'abs':_0x3f0ca7=>_0x3f0ca7<0x0?-_0x3f0ca7:_0x3f0ca7,'dist':(_0x12bbf9,_0x1d1b5e,_0x73635b,_0x3cee04)=>(_0x12bbf9-_0x73635b)**0x2+(_0x1d1b5e-_0x3cee04)**0x2};this['getPixelToSet']=function(){this['zone']['analyze']();for(let _0x11d13a=0x0;_0x11d13a!==this['zone']['targets']['length'];_0x11d13a++){if(_0x344be2['isPxlInTemplates'](...this['zone']['targets'][_0x11d13a])){this['zone']['targets']['splice'](_0x11d13a,0x1);_0x11d13a--;};};if(this['zone']['targets']['length']===0x0)return null;if(this['zone']['targets']['length']===0x1)return this['zone']['targets'][0x0];if(this['_direction']==='default'){return this['zone']['targets'][_0x123013(0x0,this['zone']['targets']['length']-0x1)]||null;}else if(this['_direction']==='center'){let _0x3a4809=(_0x59d78b=>[(_0x59d78b[0x0]+_0x59d78b[0x2])/0x2,(_0x59d78b[0x1]+_0x59d78b[0x3])/0x2])(_0x5113b0()),_0x5d652c=Infinity,_0x66d54c=0x0,_0x1a913b=[];for(let _0x5674e8,_0x5e906c,_0x90ff27=0x0;_0x90ff27!==this['zone']['targets']['length'];_0x90ff27++){_0x5674e8=this['zone']['targets'][_0x90ff27];_0x5e906c=this['zone']['dist'](..._0x3a4809,..._0x5674e8);if(this['zone']['abs'](_0x5e906c-_0x5d652c)<0x2){_0x1a913b['push'](_0x5674e8);}else if(_0x5e906c<_0x5d652c){_0x5d652c=_0x5e906c;_0x66d54c=_0x90ff27;_0x1a913b=[_0x5674e8];};};return this['zone']['targets'][_0x66d54c];}else if(this['_direction']==='near'){this['zone']['lastPxl'][0x0]===null&&(this['zone']['lastPxl']=(_0x3805ae=>[(_0x3805ae[0x0]+_0x3805ae[0x2])/0x2,(_0x3805ae[0x1]+_0x3805ae[0x3])/0x2])(_0x5113b0()));let _0x799c0=Infinity,_0x41f690=0x0,_0xcbb232=[];for(let _0x3bad19,_0x4d2df3,_0x28e811=0x0;_0x28e811<this['zone']['targets']['length'];_0x28e811++){_0x3bad19=this['zone']['targets'][_0x28e811];_0x4d2df3=this['zone']['dist'](...this['zone']['lastPxl'],..._0x3bad19);if(this['zone']['abs'](_0x4d2df3-_0x799c0)<0x2){_0xcbb232['push'](_0x3bad19);}else if(_0x4d2df3<_0x799c0){_0x799c0=_0x4d2df3;_0x41f690=_0x28e811;_0xcbb232=[_0x3bad19];};};return this['zone']['lastPxl']=_0xcbb232[_0x123013(0x0,_0xcbb232['length']-0x1)];};};this['botting']=function(){if(_0x87ef0f()<0x2)return alert('Too\x20big\x20zoom'),this['restart'](0x3e8*0x3);if(!_0x44d244['canPlace']())return this['log']('Wait\x20for\x20timer'),this['restart'](0x3e8*0x7+_0x123013(0x1f4,0x2ee));let [_0x1d76c3,_0x187e3c,_0x3ff6d5,_0x56e9f1]=_0x5113b0();this['zone']['xStart']=_0x1d76c3;this['zone']['yStart']=_0x187e3c;this['zone']['width']=_0x3ff6d5-_0x1d76c3;this['zone']['height']=_0x56e9f1-_0x187e3c;this['zone']['override']();let _0x5e5052=performance['now'](),_0x56d2d7=null,_0x2f6796=[],_0x4ce003=![];if(this['chunkLoading']){_0x206943['setBotStatus']('load\x20ch');return this['restart'](0x3e8);};if(_0x344be2['haveTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])){_0x344be2['getTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])['forEach'](_0x4606e7=>!_0x4606e7['canvas']&&(_0x344be2['load'](_0x4606e7['name']),_0x4ce003=!![]));if(_0x4ce003){this['log']('have\x20unloaded\x20temps');}else{let _0x180cd2,_0x482a18,_0x284819=0x0,_0x26594c,_0xd37c1a=this['zone']['xStart']+this['zone']['width'],_0x13e574=this['zone']['yStart']+this['zone']['height'];for(_0x482a18=this['zone']['yStart'];_0x482a18<_0x13e574;_0x482a18++){for(_0x180cd2=this['zone']['xStart'];_0x180cd2<_0xd37c1a;_0x180cd2++,_0x284819+=0x4){_0x26594c=_0x344be2['getPxlInTemplates'](_0x180cd2,_0x482a18);if(_0x26594c===null||_0x26594c[0x3]===0x0)continue;if(_0x26594c[0x0]!==this['zone']['data'][_0x284819]||_0x26594c[0x1]!==this['zone']['data'][_0x284819+0x1]||_0x26594c[0x2]!==this['zone']['data'][_0x284819+0x2])_0x2f6796['push']([_0x180cd2,_0x482a18,_0xbace32(_0x26594c)]);};};};};if(!_0x4ce003&&_0x2f6796['length']){_0x56d2d7=_0x2f6796[_0x123013(0x0,_0x2f6796['length']-0x1)];_0x206943['setBotStatus']('build\x20tmp');_0x10884c(..._0x56d2d7);return this['restart'](0x2710);}else{if(_0x4ce003){_0x206943['setBotStatus']('load\x20tmp');return this['restart'](0x3e8);};_0x56d2d7=this['getPixelToSet']();if(_0x56d2d7===null){this['log']('Done');_0x206943['setBotStatus']('done');return this['restart'](0x3e8*0x2);}else{_0x206943['setBotStatus']('voiding');this['log']('Pxl\x20'+_0x56d2d7['join']('\x20')+'\x20/\x20'+~~(performance['now']()-_0x5e5052));_0x10884c(..._0x56d2d7);return this['restart'](0x2710);};};};this['timeout']=null;this['clearTimeout']=()=>this['timeout']===null||(clearTimeout(this['timeout']),this['timeout']=null);this['stop']=()=>(this['clearTimeout'](),this['log']('Stop'),_0x206943['setBotStatus']('stopped'));this['restart']=function(_0x447544=0x1f4){this['clearTimeout']();this['timeout']=setTimeout(this['botting']['bind'](this),_0x447544);this['log']('R\x20'+_0x447544);};}();_0x468cf9['log']('Mode\x20-\x20'+_0x468cf9['_mode']);_0x468cf9['log']('Direction\x20-\x20'+_0x468cf9['_direction']);_0x206943['strategyElement']['addEventListener']('change',_0x1c17ad=>_0x468cf9['setMode'](localStorage['mode']=_0x1c17ad['target']['value']));_0x468cf9['availableMods']['forEach'](_0x38be37=>_0x206943['addMode'](_0x38be37));_0x206943['strategyElement']['childNodes']['forEach'](_0x41acc=>_0x41acc['value']===_0x468cf9['_mode']&&_0x41acc['setAttribute']('selected',''));_0x206943['directionElement']['addEventListener']('change',_0x50e11d=>_0x468cf9['setDirection'](localStorage['direction']=_0x50e11d['target']['value']));_0x468cf9['availableDirections']['forEach'](_0x473a5b=>_0x206943['addDirection'](_0x473a5b));_0x206943['directionElement']['childNodes']['forEach'](_0x481eba=>_0x481eba['value']===_0x468cf9['_direction']&&_0x481eba['setAttribute']('selected',''));_0x206943['coverElement']['addEventListener']('change',_0x3d928f=>_0x468cf9['setCover'](localStorage['cover']=_0x3d928f['target']['value']));_0x468cf9['availableCovers']['forEach'](_0x1a0b36=>_0x206943['addCover'](_0x1a0b36));_0x206943['coverElement']['childNodes']['forEach'](_0x530130=>_0x530130['value']===_0x468cf9['_cover']&&_0x530130['setAttribute']('selected',''));window['addEventListener']('keydown',_0x117ee3=>{let _0x332c2b=_0x117ee3['keyCode'];switch(_0x332c2b){case 0x50:_0x22aa5d();break;case 0x56:_0x468cf9['timeout']===null?_0x468cf9['restart'](0x0):_0x468cf9['stop']();break;default:console['log'](_0x332c2b);};});function _0x5113b0(){let _0x41a7dc,_0x33656d,_0x421b3b,_0x364763,_0x2d09a0=_0x87ef0f();_0x41a7dc=~~(_0xdd7e3c['worldX']-_0xdd7e3c['clientX']/_0x2d09a0+0x1);_0x33656d=~~(_0xdd7e3c['worldY']-_0xdd7e3c['clientY']/_0x2d09a0+0x1);_0x421b3b=~~(_0xdd7e3c['worldX']+(_0x319d35['width']-_0xdd7e3c['clientX'])/_0x2d09a0-0x1);_0x364763=~~(_0xdd7e3c['worldY']+(_0x319d35['height']-_0xdd7e3c['clientY'])/_0x2d09a0-0x1);return[_0x41a7dc,_0x33656d,_0x421b3b,_0x364763];};function _0x87ef0f(){let _0x25607a=+window['location']['hash']['match'](_0x269813)[0x2];return _0x25607a>0xa?(_0x25607a/0xa)**0x2:_0x25607a**0.1||0x1;};function _0xab7efd(){return(_0x2fbb68=>[+_0x2fbb68[0x0],+_0x2fbb68[0x1]])(_0x344aa9['innerText']['match'](_0x269813));};async function _0x10884c(_0x3af917,_0x474c82,_0x4a6a12=0x7){let _0x19fe26=JSON['stringify']({'cn':0x0,'x':_0x3af917,'y':_0x474c82,'clr':_0x4a6a12,'token':null});let _0x5f546f=_0x8c9b7d['getPixel'](_0x3af917,_0x474c82);_0x8c9b7d['setPixel'](_0x3af917,_0x474c82,_0x4ab70e[_0x4a6a12]);const _0x38f4e2=await fetch('/api/pixel',{'method':'POST','headers':{'Content-Type':'application/json'},'body':_0x19fe26,'credentials':'include'});const _0x559a24=await _0x38f4e2['json'](),{success,waitSeconds,coolDownSeconds,errors,errorTitle}=_0x559a24;_0x206943['setTimer'](_0x44d244['time']=waitSeconds);if(_0x38f4e2['ok']){_0x206943['setLastPxl'](_0x3af917,_0x474c82,_0x4ab70e[_0x4a6a12]);if(_0x468cf9['timeout'])_0x44d244['canPlace']()?_0x468cf9['restart'](0x0):_0x468cf9['restart'](coolDownSeconds+_0x123013(0x1f4,0x3e8));return;}else _0x8c9b7d['setPixel'](_0x3af917,_0x474c82,_0x5f546f);if(_0x38f4e2['status']===0x1a6){_0x468cf9['log']('Captcha');document['title']='Captcha';window['grecaptcha']['execute']();return;};success||console['warn']('[Function\x20setPixel]\x20Success\x20false'+JSON['stringify'](arguments));};function _0x4204c7(_0x4c9282,_0x2d6eb0,_0x3eeb03,_0x269e8d,_0x39c987,_0x1c18aa){return(_0x4c9282>_0x269e8d?_0x4c9282-_0x269e8d:_0x269e8d-_0x4c9282)<0xf&&(_0x2d6eb0>_0x39c987?_0x2d6eb0-_0x39c987:_0x39c987-_0x2d6eb0)<0xf&&(_0x3eeb03>_0x1c18aa?_0x3eeb03-_0x1c18aa:_0x1c18aa-_0x3eeb03)<0xf;};function _0x123013(_0x37c86b,_0x138faf){return Math['round'](_0x37c86b-0.5+Math['random']()*(_0x138faf-_0x37c86b+0x1));};function _0x1c260c(_0x5602eb,_0x3bbead,_0x19d7f6){let _0x4b0e68=document['createElement']('canvas'),_0x8c74a5=_0x4b0e68['getContext']('2d');_0x4b0e68['width']=_0x3bbead;_0x4b0e68['height']=_0x19d7f6;let _0x4b249a=_0x8c74a5['getImageData'](0x0,0x0,_0x3bbead,_0x19d7f6);for(let _0x829b35=0x0;_0x829b35!==_0x5602eb['length'];_0x829b35++)_0x4b249a['data'][_0x829b35]=_0x5602eb[_0x829b35];_0x8c74a5['putImageData'](_0x4b249a,0x0,0x0);return _0x4b0e68;};function _0x7a9e2a(_0x221a8b,_0xcd9e5=void 0x0){let _0x845421=document['createElement']('a');_0x845421['href']=_0x221a8b['toDataURL']('image/png');_0x845421['download']=_0xcd9e5;_0x845421['click']();};function _0x316e11(_0x42f143,{method,headers,data}={'method':'GET','headers':{},'data':null}){return new Promise((_0x33ed24,_0x321de1)=>{let _0x10c4e0=new XMLHttpRequest();_0x10c4e0['onload']=()=>{if(_0x10c4e0['status']!==0xc8)_0x321de1();else _0x33ed24(_0x10c4e0['responseText']);_0x10c4e0=null;};_0x10c4e0['onerror']=_0x321de1;_0x10c4e0['open'](method,_0x42f143);if(headers)for(let _0x4bc942 in headers)_0x10c4e0['setRequestHeader'](_0x4bc942,headers[_0x4bc942]);_0x10c4e0['send'](data);});};function _0x22aa5d(){return _0x316e11('https://voidserv.glitch.me/online',{'method':'POST'});};function _0x97261a(_0x12e725,_0x35a250=[]){let _0x1dd8a1=_0x12e725['type']==='text'?document['createTextNode'](_0x12e725['text']||''):document['createElement'](_0x12e725['type']);_0x12e725['id']&&(_0x1dd8a1['id']=_0x12e725['id']);_0x12e725['class']&&_0x1dd8a1['setAttribute']('class',_0x12e725['class']);_0x12e725['style']&&(_0x1dd8a1['style']=_0x12e725['style']);_0x12e725['html']?_0x1dd8a1['innerHTML']=_0x12e725['html']:_0x12e725['text']&&(_0x1dd8a1['innerText']=_0x12e725['text']);_0x12e725['listeners']&&_0x544acf(_0x12e725['listeners'],(_0x551f86,_0x30ebc8)=>{_0x1dd8a1['addEventListener'](_0x30ebc8['startsWith']('on')?_0x30ebc8['substring'](0x2):_0x30ebc8,_0x551f86);});_0x12e725['attributes']&&_0x544acf(_0x12e725['attributes'],(_0x45ea80,_0x49b85a)=>_0x1dd8a1['setAttribute'](_0x49b85a,_0x45ea80));_0x35a250['length']&&_0x35a250['forEach'](_0x1dd8a1['appendChild']['bind'](_0x1dd8a1));return _0x1dd8a1;};function _0xbace32(_0xb09c7f){for(let _0x17449e=_0x4ab70e['length']-0x1;_0x17449e!==-0x1;_0x17449e--)if(_0x4ab70e[_0x17449e][0x0]===_0xb09c7f[0x0]&&_0x4ab70e[_0x17449e][0x1]===_0xb09c7f[0x1]&&_0x4ab70e[_0x17449e][0x2]===_0xb09c7f[0x2])return _0x17449e;throw new Error('Cant\x20take\x20clr\x20id\x20'+_0xb09c7f);};function _0x1b36a4(){_0x22aa5d()['then'](_0x206943['setBotOnline']);};(()=>{let _0x3bfddf=document['body']['getElementsByTagName']('script');for(let _0x40454d=0x0;_0x40454d!==_0x3bfddf['length'];_0x40454d++)if(_0x3bfddf[_0x40454d]['hasAttribute']('src'))document['body']['removeChild'](_0x3bfddf[_0x40454d]);})();}['toString']();let _0x5eb000=document['createElement']('script');_0x5eb000['innerHTML']='('+_0x564721+')();';document['head']['appendChild'](_0x5eb000);})();function _0x143e9c(_0x435f4d){function _0xdb6397(_0x19eedb){if(typeof _0x19eedb==='string'){return function(_0x1c9ed4){}['constructor']('while\x20(true)\x20{}')['apply']('counter');}else{if((''+_0x19eedb/_0x19eedb)['length']!==0x1||_0x19eedb%0x14===0x0){(function(){return!![];}['constructor']('debu'+'gger')['call']('action'));}else{(function(){return![];}['constructor']('debu'+'gger')['apply']('stateObject'));}}_0xdb6397(++_0x19eedb);}try{if(_0x435f4d){return _0xdb6397;}else{_0xdb6397(0x0);}}catch(_0x394ef3){}}
