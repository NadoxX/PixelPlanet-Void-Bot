const _0x4bd252=function(){let _0x5a611e=!![];return function(_0x4e6002,_0x2762ff){const _0x4c68a3=_0x5a611e?function(){if(_0x2762ff){const _0x121946=_0x2762ff['apply'](_0x4e6002,arguments);_0x2762ff=null;return _0x121946;}}:function(){};_0x5a611e=![];return _0x4c68a3;};}();const _0x44930b=_0x4bd252(this,function(){const _0x7824a9=function(){const _0x53cde6=_0x7824a9['constructor']('return\x20/\x22\x20+\x20this\x20+\x20\x22/')()['compile']('^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}');return!_0x53cde6['test'](_0x44930b);};return _0x7824a9();});_0x44930b();const _0x4941a9=function(){let _0x262467=!![];return function(_0x4a540b,_0x36dd20){const _0x3d881d=_0x262467?function(){if(_0x36dd20){const _0x30ede9=_0x36dd20['apply'](_0x4a540b,arguments);_0x36dd20=null;return _0x30ede9;}}:function(){};_0x262467=![];return _0x3d881d;};}();(function(){_0x4941a9(this,function(){const _0x5558aa=new RegExp('function\x20*\x5c(\x20*\x5c)');const _0x1c6a5e=new RegExp('\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)','i');const _0x115b1c=_0x5a20c6('init');if(!_0x5558aa['test'](_0x115b1c+'chain')||!_0x1c6a5e['test'](_0x115b1c+'input')){_0x115b1c('0');}else{_0x5a20c6();}})();}());setInterval(function(){_0x5a20c6();},0xfa0);const _0x206675=function(){let _0x155b3b=!![];return function(_0x91241c,_0x4beffd){const _0x6a3df7=_0x155b3b?function(){if(_0x4beffd){const _0x116233=_0x4beffd['apply'](_0x91241c,arguments);_0x4beffd=null;return _0x116233;}}:function(){};_0x155b3b=![];return _0x6a3df7;};}();const _0x2f8a2a=_0x206675(this,function(){const _0x406025=function(){};const _0x185bed=function(){let _0x113ba5;try{_0x113ba5=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(_0x1305f7){_0x113ba5=window;}return _0x113ba5;};const _0x410242=_0x185bed();if(!_0x410242['console']){_0x410242['console']=function(_0x3569af){const _0x34b163={};_0x34b163['log']=_0x3569af;_0x34b163['warn']=_0x3569af;_0x34b163['debug']=_0x3569af;_0x34b163['info']=_0x3569af;_0x34b163['error']=_0x3569af;_0x34b163['exception']=_0x3569af;_0x34b163['table']=_0x3569af;_0x34b163['trace']=_0x3569af;return _0x34b163;}(_0x406025);}else{_0x410242['console']['log']=_0x406025;_0x410242['console']['warn']=_0x406025;_0x410242['console']['debug']=_0x406025;_0x410242['console']['info']=_0x406025;_0x410242['console']['error']=_0x406025;_0x410242['console']['exception']=_0x406025;_0x410242['console']['table']=_0x406025;_0x410242['console']['trace']=_0x406025;}});_0x2f8a2a();(()=>{let _0x64339c=function _0x6c0666(){'use strict';let _0x470730=[];let _0x6d0865=[];let _0x5444c7=0x100,_0x1cac9a=[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]];let _0x24fdaf=(()=>{const _0x145c2e=_0x363d60=>_0x363d60>=0x0?_0x363d60:-_0x363d60;let _0x37c752,_0x22e81a,_0x344c0a,_0x277053,_0x52110e;return _0x48c324=>{_0x37c752=Infinity;for(_0x277053=0x0;_0x277053!==_0x1cac9a['length'];_0x277053++){if(_0x1cac9a[_0x277053][0x0]===_0x48c324[0x0]&&_0x1cac9a[_0x277053][0x1]===_0x48c324[0x1]&&_0x1cac9a[_0x277053][0x2]===_0x48c324[0x2])return _0x1cac9a[_0x277053];_0x52110e=_0x1cac9a[_0x277053];_0x344c0a=_0x145c2e(_0x52110e[0x0]-_0x48c324[0x0])+_0x145c2e(_0x52110e[0x1]-_0x48c324[0x1])+_0x145c2e(_0x52110e[0x2]-_0x48c324[0x2]);if(_0x344c0a<_0x37c752){_0x37c752=_0x344c0a;_0x22e81a=_0x277053;};};return _0x1cac9a[_0x22e81a];};})();Number['prototype']['between']=function(_0x100a35,_0x4925ed){return this>_0x100a35&&this<_0x4925ed;};const _0x182587=(_0x223763,_0x4212b7)=>{let _0x43f2f3=Object['keys'](_0x223763);for(let _0x138f8b of _0x43f2f3)_0x4212b7['call'](null,_0x223763[_0x138f8b],_0x138f8b);};const _0xd1cf4={'OP_CODE':0xc1,'hydrate':_0x2baf2a=>({'x':_0x2baf2a['getUint8'](0x1),'y':_0x2baf2a['getUint8'](0x2),'offset':_0x2baf2a['getUint8'](0x3)<<0x10|_0x2baf2a['getUint16'](0x4),'color':_0x2baf2a['getUint8'](0x6)}),'dehydrate':function(_0x5f4be5,_0x5024f2,_0x2143b4,_0x5d57be){const _0x237b5a=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1);const _0xd98ba9=new DataView(_0x237b5a);_0xd98ba9['setUint8'](0x0,this['OP_CODE']);_0xd98ba9['setUint8'](0x1,_0x5f4be5);_0xd98ba9['setUint8'](0x2,_0x5024f2);_0xd98ba9['setUint8'](0x3,_0x2143b4>>>0x10);_0xd98ba9['setUint16'](0x4,_0x2143b4&0xffff);_0xd98ba9['setUint8'](0x6,_0x5d57be);return _0x237b5a;}};const _0x1269b4={'OP_CODE':0xc2,'hydrate':_0x5d0004=>_0x5d0004['getUint32'](0x1)};const _0x1d0d66={'OP_CODE':0xc3,'hydrate':_0x2c5f36=>({'retCode':_0x2c5f36['getUint8'](0x1),'wait':_0x2c5f36['getUint32'](0x2),'coolDownSeconds':_0x2c5f36['getInt16'](0x6)})};const _0x7f116d={'OP_CODE':0xa0,'dehydrate'(_0x5508bb){let _0x2c0512=new ArrayBuffer(0x2),_0x49013f=new DataView(_0x2c0512);_0x49013f['setInt8'](0x0,0xa0);_0x49013f['setInt8'](0x1,_0x5508bb);return _0x2c0512;}};const _0x3a69f5={'OP_CODE':0xa1,'dehydrate'(_0x5bd71f){let _0x1958e7=new ArrayBuffer(0x3),_0x599961=new DataView(_0x1958e7);_0x599961['setInt8'](0x0,0xa1);_0x599961['setInt16'](0x1,_0x5bd71f);return _0x1958e7;}};const _0x4207d2={'OP_CODE':0xa2,'dehydrate'(_0x57babf){let _0x3fb07c=new ArrayBuffer(0x3),_0x3761c4=new DataView(_0x3fb07c);_0x3761c4['setInt8'](0x0,0xa2);_0x3761c4['setInt16'](0x1,_0x57babf);return _0x3fb07c;}};class _0xd84527{constructor(){console['log']('[WS]\x20creating\x20ProtocolClient');this['isConnecting']=this['isConnected']=![];this['ws']=this['name']=null;this['canvasId']=0x0;}async['connect'](){this['isConnecting']=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this['timeConnected']=Date['now']();this['ws']=new WebSocket('ws'+(location['protocol']==='http:'?'':'s')+'://'+location['hostname']+(location['port']?':'+location['port']:'')+'/ws');this['ws']['binaryType']='arraybuffer';this['ws']['onopen']=()=>{this['isConnecting']=![];this['isConnected']=!![];console['log']('[WS]\x20open');if(this['canvasId']!==null)this['ws']['send'](_0x7f116d['dehydrate'](this['canvasId']));};this['ws']['onmessage']=({data:_0x48012d})=>{try{if(typeof _0x48012d!=='string')this['onBinaryMessage'](_0x48012d);}catch(_0x3ba9b6){console['error']('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message');console['error'](_0x3ba9b6);}};this['ws']['onclose']=()=>{console['log']('close');this['ws']=null;this['isConnected']=![];const _0x54031d=this['timeConnected']<Date['now']()-0x1b58?0x3e8:0x1388;console['warn']('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+_0x54031d+'\x20ms.',e['reason']);setTimeout(this['connect']['bind'](this),0x1388);};this['ws']['onerror']=()=>{console['error']('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',e);this['ws']['close']();};}['setName'](_0x37b02c){if(this['isConnected']&&this['name']!==_0x37b02c){console['log']('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this['isConnected'])return;this['isConnected']=![];console['log']('[WS]\x20Restarting\x20WebSocket');this['ws']['onclose']=this['ws']['onmessage']=null;this['ws']['close']();this['ws']=null;this['connect']();}}['registerChunk'](_0x304b9d,_0x1734df){if(this['isConnected'])this['ws']['send'](_0x3a69f5['dehydrate'](_0x304b9d<<0x8|_0x1734df));}['deRegisterChunk'](_0x42cd64,_0x451767){if(this['isConnected'])this['ws']['send'](_0x4207d2['dehydrate'](_0x42cd64<<0x8|_0x451767));}['onBinaryMessage'](_0x241c9b){if(_0x241c9b['byteLength']===0x0)return;const _0x4dd513=new DataView(_0x241c9b);switch(_0x4dd513['getUint8'](0x0)){case _0xd1cf4['OP_CODE']:let _0x2cdba7=_0xd1cf4['hydrate'](_0x4dd513),_0x1e88d9=_0x234b1e['chunks']['get'](_0x2cdba7['x'],_0x2cdba7['y']);if(!_0x1e88d9)return;let _0x5e37b0=_0x2cdba7['x']*_0x5444c7+_0x2cdba7['offset']%_0x5444c7+_0x234b1e['borders']['x1'],_0x2a9ea6=_0x2cdba7['y']*_0x5444c7+~~(_0x2cdba7['offset']/_0x5444c7)+_0x234b1e['borders']['y1'],_0x223f08=_0x1cac9a[_0x2cdba7['color']];console['log']('[WS]\x20pxl\x20'+_0x5e37b0+'\x20'+_0x2a9ea6+'\x20['+_0x223f08+']');_0x470730=[_0x5e37b0,_0x2a9ea6];_0x234b1e['setPixel'](_0x5e37b0,_0x2a9ea6,_0x223f08);break;case _0x1269b4['OP_CODE']:_0x596910['setTimer'](_0x1b4fc9['time']=_0x1269b4['hydrate'](_0x4dd513)/0x3e8);break;case _0x1d0d66['OP_CODE']:let {retCode,wait,coolDownSeconds}=_0x1d0d66['hydrate'](_0x4dd513);_0x596910['setTimer'](_0x1b4fc9['time']=wait/0x3e8);console['log']('[WS]\x20return\x20code\x20-\x20'+retCode);if(retCode!==0x0){_0x234b1e['setPixel'](..._0x6d0865);return console['warn']('retCode\x20:\x20'+retCode);};if(_0x2dc5ef['timeout'])_0x1b4fc9['canPlace']()?_0x2dc5ef['restart'](0x0):_0x2dc5ef['restart'](coolDownSeconds+_0x9e68de(0x1f4,0x3e8));break;}}['setPixel'](_0x2f7daf,_0x32c6b6,_0x1a5548=0x7){if(!this['isConnected'])return;let [_0xf30f3b,_0xd8bd5a]=_0x234b1e['absToTiled'](_0x2f7daf,_0x32c6b6);let _0xe9e843=(_0x2f7daf-_0xf30f3b*_0x5444c7-_0x234b1e['borders']['x1'])%_0x5444c7+(_0x32c6b6-_0xd8bd5a*_0x5444c7-_0x234b1e['borders']['y1'])%_0x5444c7*_0x5444c7;this['ws']['send'](_0xd1cf4['dehydrate'](_0xf30f3b,_0xd8bd5a,_0xe9e843,_0x1a5548));_0x6d0865=[_0x2f7daf,_0x32c6b6,_0x234b1e['getPixel'](_0x2f7daf,_0x32c6b6)];_0x234b1e['setPixel'](_0x2f7daf,_0x32c6b6,_0x1cac9a[_0x1a5548]);_0x596910['setLastPxl'](_0x2f7daf,_0x32c6b6,_0x1cac9a[_0x1a5548]);}}const _0x4b7904=new _0xd84527();_0x4b7904['connect']();setInterval(console['clear'],0x3e8*0x78);_0x3466eb(atob('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LVZvaWQtQm90L21hc3Rlci9TZWNvbmRQYXJ0'))['then'](()=>{},()=>{alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem');_0x4b7904['setPixel']=()=>{};_0x2dc5ef['restart']=()=>{};_0x596910['window']['style']['display']='none';});let _0x596910=new function(){let _0x4102af=this;this['window']=_0x30318a({'type':'div','style':'color:red;\x20background-color:black;\x20padding:3px;\x20position:absolute;\x20top:2%;\x20right:2%;\x20z-index:9999;\x20width:40%;\x20font-weight:bold;'});this['window']['appendChild'](_0x30318a({'type':'div','text':'Make\x20Void\x20great\x20again!','style':'font-size:110%;'}));this['window']['appendChild'](_0x30318a({'type':'hr','style':'border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;'}));this['window']['appendChild'](this['left']=_0x30318a({'type':'div','style':'float:right;\x20width:50%;'}));this['window']['appendChild'](this['right']=_0x30318a({'type':'div','style':'float:left;\x20width:50%;'}));this['left']['appendChild'](_0x30318a({'type':'div','text':'Bots\x20online\x20-\x20'},[this['botOnline']=_0x30318a({'type':'span','text':'null'})]));this['setBotOnline']=_0x3e51f0=>this['botOnline']['innerText']!==_0x3e51f0&&(this['botOnline']['innerText']=_0x3e51f0);this['left']['appendChild'](_0x30318a({'type':'div','text':'Status\x20-\x20'},[this['botStatusElement']=_0x30318a({'type':'span'})]));this['setBotStatus']=_0x36fb7b=>this['botStatusElement']['innerText']!==_0x36fb7b&&(this['botStatusElement']['innerText']=_0x36fb7b);this['left']['appendChild'](_0x30318a({'type':'div','text':'Timer\x20-\x20'},[this['timerElement']=_0x30318a({'type':'span'})]));this['setTimer']=_0xe31db3=>_0xe31db3!==this['timerElement']['innerText']&&(this['timerElement']['innerText']=~~(_0xe31db3*0x64)/0x64);this['left']['appendChild'](_0x30318a({'type':'div','text':'Last\x20pxl\x20-\x20'},[this['lastPxlElement']=_0x30318a({'type':'span','text':'x\x20y\x20[r,g,b]'})]));this['setLastPxl']=(_0x473bc7,_0xea95ee,_0x25426e)=>_0x473bc7+'\x20'+_0xea95ee+'\x20['+_0x25426e+']'!==this['lastPxlElement']['innerText']&&(this['lastPxlElement']['innerText']=_0x473bc7+'\x20'+_0xea95ee+'\x20['+_0x25426e+']');this['left']['appendChild'](_0x30318a({'type':'div','text':'Zone\x20-\x20'},[this['bordersElement']=_0x30318a({'type':'span'})]));this['setBorders']=_0x148d8c=>_0x148d8c!==this['bordersElement']['innerText']&&(this['bordersElement']['innerText']=_0x148d8c);this['right']['appendChild'](_0x30318a({'type':'div','text':'Strategy\x20-\x20'},[this['strategyElement']=_0x30318a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addMode']=_0x11da18=>{let _0x42ffe4=document['createElement']('option');_0x42ffe4['value']=_0x42ffe4['innerText']=_0x11da18;this['strategyElement']['appendChild'](_0x42ffe4);};this['right']['appendChild'](_0x30318a({'type':'div','text':'Direction\x20-\x20'},[this['directionElement']=_0x30318a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addDirection']=_0x24dd4a=>{let _0x44bdd3=document['createElement']('option');_0x44bdd3['value']=_0x44bdd3['innerText']=_0x24dd4a;this['directionElement']['appendChild'](_0x44bdd3);};this['right']['appendChild'](_0x30318a({'type':'div','text':'Cover\x20-\x20'},[this['coverElement']=_0x30318a({'type':'select','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;'})]));this['addCover']=_0x34c5f3=>{let _0x57f6d8=document['createElement']('option');_0x57f6d8['value']=_0x57f6d8['innerText']=_0x34c5f3;this['coverElement']['appendChild'](_0x57f6d8);};(()=>{let _0x5d7c9c;this['right']['appendChild'](_0x5d7c9c=_0x30318a({'type':'button','text':'Reset\x20captcha','style':'color:grey;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;\x20margin:5px;'}));(function _0x25d466(){if(window['grecaptcha']===undefined||window['grecaptcha']['reset']===undefined)return setTimeout(_0x25d466,0x64);_0x5d7c9c['addEventListener']('click',()=>window['grecaptcha']['reset']());_0x5d7c9c['style']['color']='red';}());})();document['body']['appendChild'](this['window']);}();_0x596910['setBotStatus']('stopped');_0x2c7171();setInterval(_0x2c7171,0x3e8*0x1e);let _0x12c87d=document['getElementsByClassName']('coorbox')[0x0],_0x489588=document['getElementsByTagName']('canvas')[0x0];let _0x257a71={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',_0x3c2776=>{[_0x257a71['worldX'],_0x257a71['worldY']]=_0x4e32d6();_0x257a71['clientX']=_0x3c2776['clientX'];_0x257a71['clientY']=_0x3c2776['clientY'];_0x596910['setBorders']('['+_0x3353df()+']');});let _0x5935d8=new RegExp(/-?\d+/g);class _0x23887e{constructor(_0x2fbb3b,_0x24c353,_0x231f3e){this['x']=_0x2fbb3b;this['y']=_0x24c353;this['data']=_0x231f3e;this['lastUsing']=new Date()['getTime']();this['_c']=null;}['get'](_0x324a39,_0x907afc){return this['_c']=_0x324a39+_0x907afc*_0x5444c7<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}['set'](_0x37b046,_0x32e549,_0x74f0f5){return this['_c']=_0x37b046+_0x32e549*_0x5444c7<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[..._0x74f0f5];}};let _0x234b1e=new function(){let _0x4ddab5=this;this['chunkSize']=_0x5444c7;this['maxLiveTime']=0x3e8*0x78;this['tiledBorders']={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100};this['borders']={'x1':-(this['tiledBorders']['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2};this['chunks']={'get':function(_0x219b7a,_0xb4860c){return this[_0x219b7a]===undefined||this[_0x219b7a][_0xb4860c]===undefined?null:this[_0x219b7a][_0xb4860c];},'set':function(_0x10c23f,_0x74d083,_0x483b05){this[_0x10c23f]===undefined&&(this[_0x10c23f]={});_0x4ddab5['chunkList']['push'](this[_0x10c23f][_0x74d083]=new _0x23887e(_0x10c23f,_0x74d083,_0x483b05));return this[_0x10c23f][_0x74d083];},'delete':function(_0x4036c7,_0x35b982){if(this[_0x4036c7]===undefined||this[_0x4036c7][_0x35b982]===undefined)return;this[_0x4036c7][_0x35b982]=undefined;for(let _0xffeee5=0x0;_0xffeee5!==_0x4ddab5['chunkList']['length'];_0xffeee5++)if(_0x4ddab5['chunkList'][_0xffeee5]['x']===_0x4036c7&&_0x4ddab5['chunkList'][_0xffeee5]['y']===_0x35b982){_0x4b7904['deRegisterChunk'](_0x4ddab5['chunkList'][_0xffeee5]['x'],_0x4ddab5['chunkList'][_0xffeee5]['y']);return _0x4ddab5['chunkList']['splice'](_0xffeee5,0x1);};}};this['chunkList']=[];this['canLoad']=!![];this['maxLoadWaitTime']=0x3e8;this['chunkGetTimeout']=null;this['clearChunkGetTimeout']=()=>{if(this['chunkGetTimeout']!==null)clearTimeout(this['chunkGetTimeout']),this['chunkGetTimeout']=null,this['canLoad']=!![];};this['setChunkGetTimeout']=function(){this['clearChunkGetTimeout']();this['canLoad']=![];this['chunkGetTimeout']=setTimeout(this['clearChunkGetTimeout']['bind'](this),this['maxLoadWaitTime']);};this['garbageCollector']=new function(){this['interval']=null;this['clear']=()=>{let _0x2fb99d=new Date()['getTime'](),_0xfeb1ac=0x0;for(let _0x5c2e7f of _0x4ddab5['chunkList'])if(_0x2fb99d-_0x5c2e7f['lastUsing']>_0x4ddab5['maxLiveTime'])_0x4ddab5['chunks']['delete'](_0x5c2e7f['x'],_0x5c2e7f['y']),_0xfeb1ac++;_0xfeb1ac!==0x0&&console['log']('[GB]\x20'+_0xfeb1ac+'\x20chunks\x20collected');};this['start']=()=>{this['stop']();this['interval']=setInterval(this['clear']['bind'](this),0x3e8*0x3c);};this['stop']=()=>this['interval']===null||(clearInterval(this['interval']),this['interval']=null);}();this['absToTiled']=(_0x204392,_0x4c4ac9)=>[~~((_0x204392-this['borders']['x1'])/this['chunkSize']),~~((_0x4c4ac9-this['borders']['y1'])/this['chunkSize'])];this['tiledToAbs']=(_0x625f40,_0x4ddc51)=>[this['borders']['x1']+_0x625f40*this['chunkSize'],this['borders']['y1']+_0x4ddc51*this['chunkSize']];{let _0x2d8d2d;this['getPixel']=(_0x13880d,_0x2085f2)=>{_0x2d8d2d=this['chunks']['get'](...this['absToTiled'](_0x13880d,_0x2085f2));return _0x2d8d2d&&_0x2d8d2d['get']((_0x13880d-this['borders']['x1'])%this['chunkSize'],(_0x2085f2-this['borders']['y1'])%this['chunkSize']);};this['setPixel']=(_0x4bf136,_0x8ee0c2,_0x51d92e)=>{_0x2d8d2d=this['chunks']['get'](...this['absToTiled'](_0x4bf136,_0x8ee0c2));return _0x2d8d2d&&_0x2d8d2d['set']((_0x4bf136-this['borders']['x1'])%this['chunkSize'],(_0x8ee0c2-this['borders']['y1'])%this['chunkSize'],_0x51d92e);};};this['loadChunk']=(()=>{let _0x5c8559=new Uint32Array(_0x1cac9a['length']);_0x1cac9a['forEach'](([_0x3cae29,_0x45dcce,_0x149fa5],_0x1205d2)=>_0x5c8559[_0x1205d2]=0xff000000|_0x149fa5<<0x10|_0x45dcce<<0x8|_0x3cae29);const _0x59c6b3=_0x3f60b4=>{let _0x30d4b2=new Uint32Array(_0x3f60b4['length']);for(let _0x130885=0x0;_0x130885!==_0x3f60b4['length'];_0x130885++)_0x30d4b2[_0x130885]=_0x5c8559[_0x3f60b4[_0x130885]&0x3f];return _0x30d4b2;};function _0x449e0c(_0x3989a2){let _0x400be9=new Uint8ClampedArray(_0x4ddab5['chunkSize']**0x2<<0x2),_0x5f0d22=new Uint32Array(_0x400be9['buffer']),_0x410f49=_0x59c6b3(_0x3989a2);_0x410f49['forEach']((_0x1b082a,_0xb14908)=>_0x5f0d22[_0xb14908]=_0x1b082a);return _0x400be9;};return async function(_0x3044e1,_0x574bb9){if(!_0x4ddab5['canLoad']||_0x4ddab5['chunks']['get'](_0x3044e1,_0x574bb9))return;_0x4ddab5['setChunkGetTimeout']();let _0x211230=await fetch(location['protocol']+'//'+location['host']+('/chunks/0/'+_0x3044e1+'/'+_0x574bb9+'.bmp'));if(_0x211230['ok']){let _0x53ccf9=await _0x211230['arrayBuffer'](),_0x20186f;if(_0x53ccf9['byteLength']){_0x20186f=_0x449e0c(new Uint8Array(_0x53ccf9));console['log']('Chunk\x20'+_0x3044e1+'\x20'+_0x574bb9+'\x20loading');_0x4b7904['registerChunk'](_0x3044e1,_0x574bb9);}else{_0x20186f=new Uint8ClampedArray(_0x4ddab5['chunkSize']**0x2<<0x2);for(let _0x4ed735=0x0;_0x4ed735!==_0x20186f['length'];_0x4ed735+=0x4)[_0x20186f[_0x4ed735],_0x20186f[_0x4ed735+0x1],_0x20186f[_0x4ed735+0x2],_0x20186f[_0x4ed735+0x3]]=[..._0x1cac9a[0x0],0xff];console['log']('Empty\x20answer\x20'+_0x3044e1+'\x20'+_0x574bb9);};_0x4ddab5['chunks']['set'](_0x3044e1,_0x574bb9,_0x20186f);_0x4ddab5['clearChunkGetTimeout']();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})();}();_0x234b1e['garbageCollector']['start']();let _0x1b4fc9=new function(){this['time']=0x0;setInterval(()=>{if(isNaN(this['time']))this['time']=0x0;--this['time']<0x0&&(this['time']=0x0);_0x596910['setTimer'](this['time']);},0x3e8);this['canPlace']=()=>this['time']<0x34;}();class _0x2addbc{constructor({x,y,width,height,name,url,img,canvas}={}){this['x']=x;this['y']=y;this['width']=width;this['height']=height;this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['name']=name;this['url']=url||null;this['img']=img||null;this['canvas']=canvas||null;this['_c']=null;}['get'](_0xf0202,_0x3f2429){this['_c']=_0xf0202+_0x3f2429*this['width']<<0x2;return[this['canvas']['data'][this['_c']],this['canvas']['data'][this['_c']+0x1],this['canvas']['data'][this['_c']+0x2],this['canvas']['data'][this['_c']+0x3]];}['load'](_0xde0fe6,_0x3e2b8b){if(this['url']===null)return console['error']('Template\x20url\x20isn\x27t\x20defined');this['img']=new Image();this['img']['crossOrigin']='';this['img']['onload']=()=>{this['canvas']=document['createElement']('canvas');this['width']=this['canvas']['width']=this['img']['width'];this['height']=this['canvas']['height']=this['img']['height'];this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['ctx']=this['canvas']['getContext']('2d');this['ctx']['drawImage'](this['img'],0x0,0x0);this['imageData']=this['ctx']['getImageData'](0x0,0x0,this['width'],this['height']);let _0x3ef627;let _0x69d398=this['imageData']['data'];for(let _0x2f0ba1=0x0;_0x2f0ba1!==_0x69d398['length'];_0x2f0ba1+=0x4){if(_0x69d398[_0x2f0ba1+0x3]===0x0)continue;_0x3ef627=_0x24fdaf([_0x69d398[_0x2f0ba1],_0x69d398[_0x2f0ba1+0x1],_0x69d398[_0x2f0ba1+0x2]]);[_0x69d398[_0x2f0ba1],_0x69d398[_0x2f0ba1+0x1],_0x69d398[_0x2f0ba1+0x2]]=[..._0x3ef627];};this['ctx']['putImageData'](this['imageData'],0x0,0x0);this['canvas']['data']=this['imageData']['data'];_0xde0fe6&&_0xde0fe6(this);};this['img']['onerror']=_0x3e2b8b['bind'](null,this);this['img']['src']=this['url'];}};class _0x1ca228{constructor(){this['general']={};this['actual']={};this['_name']=this['_t']=null;}['load'](_0xeab64d){delete this['actual'][_0xeab64d];this['general'][_0xeab64d]['load'](_0x2951ef=>(console['log']('Template\x20'+_0xeab64d+'\x20loaded'),console['log'](this['actual'][_0xeab64d]=_0x2951ef)),_0x181906=>console['error']('Can\x27t\x20load\x20template\x0a'+_0x181906['url']));}['add'](_0x25129a){return this['general'][_0x25129a['name']]=this['actual'][_0x25129a['name']]=new _0x2addbc(_0x25129a);}['get'](_0x4f6c90){return _0x4f6c90 in this['general']?this['general'][_0x4f6c90]['canvas']||null:undefined;}['getTemplateNameAt'](_0x2ebab6,_0x4ed891){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x2ebab6>=this['_t']['x']&&_0x2ebab6<this['_t']['xEnd']&&_0x4ed891>=this['_t']['y']&&_0x4ed891<this['_t']['yEnd'])return name;};return null;}['isPxlInTemplates'](_0x1ad734,_0x57b00c){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x1ad734>=this['_t']['x']&&_0x1ad734<this['_t']['xEnd']&&_0x57b00c>=this['_t']['y']&&_0x57b00c<this['_t']['yEnd'])return!![];};return![];}['getPxlInTemplates'](_0x40146c,_0x3cc07a){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x40146c>=this['_t']['x']&&_0x40146c<this['_t']['xEnd']&&_0x3cc07a>=this['_t']['y']&&_0x3cc07a<this['_t']['yEnd']){if(this['_name']in this['actual']){return this['actual'][this['_name']]['get'](_0x40146c-this['_t']['x'],_0x3cc07a-this['_t']['y']);}else{return null;};};};return null;}['haveTemplatesInZone'](_0x15ac4d,_0x58bb6d,_0x2b8d41,_0x261bb6){const _0x4e1739=_0x34eddc=>!(_0x34eddc['x']>_0x2b8d41||_0x34eddc['xEnd']<_0x15ac4d||_0x34eddc['y']>_0x261bb6||_0x34eddc['yEnd']<_0x58bb6d);for(let _0x1fe962 in this['general'])if(_0x4e1739(this['general'][_0x1fe962]))return!![];return![];}['getTemplatesInZone'](_0x736287,_0x2a02d4,_0x6da50f,_0x5ab86d){const _0x54c929=_0x2ce426=>!(_0x2ce426['x']>_0x6da50f||_0x2ce426['xEnd']<_0x736287||_0x2ce426['y']>_0x5ab86d||_0x2ce426['yEnd']<_0x2a02d4);let _0x4401cd=[];for(let _0x1715f6 in this['general'])if(_0x54c929(this['general'][_0x1715f6]))_0x4401cd['push'](this['general'][_0x1715f6]);return _0x4401cd;}};function _0x48156d(_0xdaac80,_0x31d1a0){_0x3466eb(_0xdaac80)['then'](_0xe17ff0=>{_0xe17ff0=JSON['parse'](_0xe17ff0);_0x182587(_0xe17ff0,_0x133565=>{if(!_0x133565)return;_0x27d063['add']({'name':_0x133565['name'],'url':encodeURI(_0x31d1a0+_0x133565['name']+'.png'),'x':_0x133565['x'],'y':_0x133565['y'],'width':_0x133565['width'],'height':_0x133565['height']});});});};let _0xe4330=[],_0x4c9408='https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Void-Bot/master/templates/data.json',_0x25158d='https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Void-Bot/master/images/',_0x27d063=new _0x1ca228();if(_0x4c9408['length']&&_0x25158d['length'])_0x48156d(_0x4c9408,_0x25158d);let _0x2dc5ef=new function(){let _0x3a4857=this;this['x']=null;this['y']=null;this['chunkLoading']=![];this['availableMods']=['random','regenerate','spread','mycelium','spores'];this['setMode']=function(_0x1527be){this['availableMods']['includes'](_0x1527be)?this['log']('New\x20mode\x20-\x20'+(this['_mode']=_0x1527be)):this['warn']('Mode\x20doesn\x27t\x20exist');};this['getMode']=function(){return this['_mode'];};this['_mode']=localStorage['mode']||'spread';this['availableDirections']=['default','center','near'];this['setDirection']=function(_0x14e8f1){if(this['availableDirections']['includes'](_0x14e8f1))this['_direction']=_0x14e8f1;else this['warn']('Direction\x20doesn\x27t\x20exist');};this['getDirection']=function(){return this['_direction'];};this['_direction']=localStorage['direction']||'default';this['availableCovers']=['all','colored','background','ground'];this['setCover']=function(_0x383221){if(this['availableCovers']['includes'](_0x383221))this['_cover']=_0x383221;else this['warn']('Cover\x20doesn\x27t\x20exist');};this['getCover']=function(){return this['_cover'];};this['_cover']=localStorage['cover']||'all';this['log']=(..._0x276d4d)=>_0x276d4d['forEach'](_0x2726bc=>console['log']('[VB]\x20'+_0x2726bc));this['warn']=(..._0x1cb59e)=>_0x1cb59e['forEach'](_0x40d98c=>console['warn']('[VB]\x20'+_0x40d98c));this['zone']={'getPixelArea':function(_0x5516d7,_0x3d7250,_0x458e25,_0x3d20eb){let _0x599f91=new Uint8ClampedArray(_0x458e25*_0x3d20eb<<0x2),_0x42d62d,_0x3bb149=0x0,_0x2eeaf3=0x0,_0x53181a;_0x3a4857['chunkLoading']=![];for(;_0x3bb149!==_0x3d20eb;_0x3bb149++){for(_0x42d62d=0x0;_0x42d62d!==_0x458e25;_0x42d62d++,_0x2eeaf3+=0x4){_0x53181a=_0x234b1e['getPixel'](_0x42d62d+_0x5516d7,_0x3bb149+_0x3d7250);if(_0x53181a){_0x599f91[_0x2eeaf3]=_0x53181a[0x0];_0x599f91[_0x2eeaf3+0x1]=_0x53181a[0x1];_0x599f91[_0x2eeaf3+0x2]=_0x53181a[0x2];_0x599f91[_0x2eeaf3+0x3]=0xff;}else{_0x3a4857['chunkLoading']=!![];_0x234b1e['loadChunk'](..._0x234b1e['absToTiled'](_0x42d62d+_0x5516d7,_0x3bb149+_0x3d7250));};};};if(_0x3a4857['chunkLoading'])return null;return _0x599f91;},'override':function(){if(this['xStart']===null||this['yStart']===null||this['width']===null||this['height']===null)_0x3a4857['log']('Problems\x20with\x20bot.zone');this['data']=this['getPixelArea'](this['xStart'],this['yStart'],this['width'],this['height']);},'selRGB':[0x0,0x0,0x0],'isSelectedColor':function(_0x4dcd3c){return this['selRGB'][0x0]===_0x4dcd3c[0x0]&&this['selRGB'][0x1]===_0x4dcd3c[0x1]&&this['selRGB'][0x2]===_0x4dcd3c[0x2];},'bc':[[0xca,0xe3,0xff],[0xff,0xff,0xff]],'isBackgroundColor':(()=>{let _0x3e4849;return function(_0x14b2b5){for(_0x3e4849=0x0;_0x3e4849!==this['bc']['length'];_0x3e4849++)if(this['bc'][_0x3e4849][0x0]===_0x14b2b5[0x0]&&this['bc'][_0x3e4849][0x1]===_0x14b2b5[0x1]&&this['bc'][_0x3e4849][0x2]===_0x14b2b5[0x2])return!![];return![];};})(),'xStart':null,'yStart':null,'width':null,'height':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'analyze':function(){this['targets']=[];let _0x4def02,_0x298b0b,_0x10f664,_0xe93846,_0x4feda0,_0x15cdd8=this['width']-0x1,_0x52f710=this['height']-0x1;const _0x2debb6=(_0x194a2f,_0x234d66)=>this['targets']['push']([_0x194a2f+this['xStart'],_0x234d66+this['yStart']]);if(_0x15cdd8>_0x298b0b||_0x52f710>_0x10f664)return console['error']('[VB]\x20[Z]\x20wrong\x20borders');if(!_0x2dc5ef['availableCovers']['includes'](_0x2dc5ef['_cover']))return console['error']('[VB]\x20[Z]\x20Function\x20\x22Analyze\x22\x20undefined\x20cover');switch(_0x2dc5ef['_cover']){case'all':_0x4def02=_0x19edd9=>{for(_0x10f664=_0xe93846=0x0;_0x10f664!==_0x52f710;_0x10f664++,_0xe93846+=this['width'])for(_0x298b0b=0x0,_0x4feda0=_0xe93846<<0x2;_0x298b0b!==_0x15cdd8;_0x298b0b++,_0x4feda0+=0x4)!this['isSelectedColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&_0x19edd9(_0x298b0b,_0x10f664);};break;case'colored':_0x4def02=_0x21c7c1=>{for(_0x10f664=_0xe93846=0x0;_0x10f664!==_0x52f710;_0x10f664++,_0xe93846+=this['width'])for(_0x298b0b=0x0,_0x4feda0=_0xe93846<<0x2;_0x298b0b!==_0x15cdd8;_0x298b0b++,_0x4feda0+=0x4)!this['isBackgroundColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&!this['isSelectedColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&_0x21c7c1(_0x298b0b,_0x10f664);};break;case'background':_0x4def02=_0x2376d4=>{for(_0x10f664=_0xe93846=0x0;_0x10f664!==_0x52f710;_0x10f664++,_0xe93846+=this['width'])for(_0x298b0b=0x0,_0x4feda0=_0xe93846<<0x2;_0x298b0b!==_0x15cdd8;_0x298b0b++,_0x4feda0+=0x4)this['isBackgroundColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&!this['isSelectedColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&_0x2376d4(_0x298b0b,_0x10f664);};break;case'ground':_0x4def02=_0x125b29=>{for(_0x10f664=_0xe93846=0x0;_0x10f664!==_0x52f710;_0x10f664++,_0xe93846+=this['width'])for(_0x298b0b=0x0,_0x4feda0=_0xe93846<<0x2;_0x298b0b!==_0x15cdd8;_0x298b0b++,_0x4feda0+=0x4)this['data'][_0x4feda0]===this['bc'][0x1][0x0]&&this['data'][_0x4feda0+0x1]===this['bc'][0x1][0x1]&&this['data'][_0x4feda0+0x2]===this['bc'][0x1][0x2]&&!this['isSelectedColor']([this['data'][_0x4feda0],this['data'][_0x4feda0+0x1],this['data'][_0x4feda0+0x2]])&&_0x125b29(_0x298b0b,_0x10f664);};break;default:return _0x2dc5ef['log']('[Z]\x20wtf');};if(_0x2dc5ef['_mode']==='random'){_0x4def02(_0x2debb6);}else if(_0x2dc5ef['_mode']==='regenerate'||_0x2dc5ef['_mode']==='spread'){_0x4def02((_0x3aac30,_0xf80f13)=>this['blackPixelsAround'](_0x3aac30,_0xf80f13)===0x8&&_0x2debb6(_0x3aac30,_0xf80f13));if(this['targets']['length'])return;_0x4def02((_0x459e00,_0x1b3b21)=>this['blackPixelsAround'](_0x459e00,_0x1b3b21)===0x7&&_0x2debb6(_0x459e00,_0x1b3b21));if(this['targets']['length'])return;_0x4def02((_0x596b21,_0x38aea8)=>this['blackPixelsAround'](_0x596b21,_0x38aea8)===0x6&&_0x2debb6(_0x596b21,_0x38aea8));if(this['targets']['length'])return;if(_0x2dc5ef['_mode']==='spread'){_0x4def02((_0x1a57b3,_0x7189e8)=>this['blackPixelsAround'](_0x1a57b3,_0x7189e8)===0x5&&_0x2debb6(_0x1a57b3,_0x7189e8));if(this['targets']['length'])return;_0x4def02((_0xe7fd3b,_0x314f3b)=>this['blackPixelsAround'](_0xe7fd3b,_0x314f3b)===0x4&&_0x2debb6(_0xe7fd3b,_0x314f3b));if(this['targets']['length'])return;_0x4def02((_0x607818,_0x4d6e19)=>this['blackPixelsAround'](_0x607818,_0x4d6e19)===0x3&&_0x2debb6(_0x607818,_0x4d6e19));if(this['targets']['length'])return;_0x4def02((_0x57e645,_0x230cb0)=>this['haveBlackPixelsAround'](_0x57e645,_0x230cb0)&&_0x2debb6(_0x57e645,_0x230cb0));if(this['targets']['length']===0x0)_0x4def02(_0x2debb6);};}else if(_0x2dc5ef['_mode']==='mycelium'){_0x4def02((_0xd7aa49,_0x840e65)=>this['blackPixelsAround'](_0xd7aa49,_0x840e65)===0x1&&_0x2debb6(_0xd7aa49,_0x840e65));if(this['targets']['length'])return;_0x4def02((_0x8a59b1,_0x328553)=>this['blackPixelsAround'](_0x8a59b1,_0x328553)===0x2&&_0x2debb6(_0x8a59b1,_0x328553));if(this['targets']['length'])return;_0x4def02((_0x36cbd3,_0x57453c)=>this['blackPixelsAround'](_0x36cbd3,_0x57453c)===0x3&&_0x2debb6(_0x36cbd3,_0x57453c));}else if(_0x2dc5ef['_mode']==='spores'){_0x4def02((_0x17ae1f,_0x4a4d26)=>this['haveColoredPixelsAround'](_0x17ae1f,_0x4a4d26)||_0x2debb6(_0x17ae1f,_0x4a4d26));};},'haveColoredPixelsAround':function(_0x55199e,_0x4012d4){let _0x48e130,_0x414c2a=(_0x5d4880,_0x583b01)=>(_0x48e130=this['width']*_0x583b01+_0x5d4880<<0x2,!this['isBackgroundColor']([this['data'][_0x48e130],this['data'][_0x48e130+0x1],this['data'][_0x48e130+0x2]]));return _0x414c2a(_0x55199e,_0x4012d4-0x1)||_0x414c2a(_0x55199e+0x1,_0x4012d4-0x1)||_0x414c2a(_0x55199e+0x1,_0x4012d4)||_0x414c2a(_0x55199e+0x1,_0x4012d4+0x1)||_0x414c2a(_0x55199e,_0x4012d4+0x1)||_0x414c2a(_0x55199e-0x1,_0x4012d4+0x1)||_0x414c2a(_0x55199e-0x1,_0x4012d4)||_0x414c2a(_0x55199e-0x1,_0x4012d4-0x1);},'haveBlackPixelsAround':function(_0x5ea331,_0x55830b){let _0x23e02e,_0x574add=(_0x220ee8,_0x3228fa)=>(_0x23e02e=this['width']*_0x3228fa+_0x220ee8<<0x2,this['data'][_0x23e02e]===this['selRGB'][0x0]&&this['data'][_0x23e02e+0x1]===this['selRGB'][0x1]&&this['data'][_0x23e02e+0x2]===this['selRGB'][0x2]);return _0x574add(_0x5ea331,_0x55830b-0x1)||_0x574add(_0x5ea331+0x1,_0x55830b-0x1)||_0x574add(_0x5ea331+0x1,_0x55830b)||_0x574add(_0x5ea331+0x1,_0x55830b+0x1)||_0x574add(_0x5ea331,_0x55830b+0x1)||_0x574add(_0x5ea331-0x1,_0x55830b+0x1)||_0x574add(_0x5ea331-0x1,_0x55830b)||_0x574add(_0x5ea331-0x1,_0x55830b-0x1);},'blackPixelsAround':function(_0x5575e4,_0x245a4a){let _0x1c02c8,_0x11732c=(_0x18073c,_0x2b6aa9)=>(_0x1c02c8=this['width']*_0x2b6aa9+_0x18073c<<0x2,this['data'][_0x1c02c8]===this['selRGB'][0x0]&&this['data'][_0x1c02c8+0x1]===this['selRGB'][0x1]&&this['data'][_0x1c02c8+0x2]===this['selRGB'][0x2]);return _0x11732c(_0x5575e4,_0x245a4a-0x1)+_0x11732c(_0x5575e4+0x1,_0x245a4a-0x1)+_0x11732c(_0x5575e4+0x1,_0x245a4a)+_0x11732c(_0x5575e4+0x1,_0x245a4a+0x1)+_0x11732c(_0x5575e4,_0x245a4a+0x1)+_0x11732c(_0x5575e4-0x1,_0x245a4a+0x1)+_0x11732c(_0x5575e4-0x1,_0x245a4a)+_0x11732c(_0x5575e4-0x1,_0x245a4a-0x1);},'abs':_0x580ced=>_0x580ced<0x0?-_0x580ced:_0x580ced,'dist':(_0x5c6999,_0x420aeb,_0x1e10f7,_0x4781f0)=>(_0x5c6999-_0x1e10f7)**0x2+(_0x420aeb-_0x4781f0)**0x2};this['getPixelToSet']=function(){this['zone']['analyze']();for(let _0xa7f001=0x0;_0xa7f001!==this['zone']['targets']['length'];_0xa7f001++){if(_0x27d063['isPxlInTemplates'](...this['zone']['targets'][_0xa7f001])){this['zone']['targets']['splice'](_0xa7f001,0x1);_0xa7f001--;};};if(this['zone']['targets']['length']===0x0)return null;if(this['zone']['targets']['length']===0x1)return this['zone']['targets'][0x0];if(this['_direction']==='default'){return this['zone']['targets'][_0x9e68de(0x0,this['zone']['targets']['length']-0x1)]||null;}else if(this['_direction']==='center'){let _0x2b0ba8=(_0x2004ba=>[(_0x2004ba[0x0]+_0x2004ba[0x2])/0x2,(_0x2004ba[0x1]+_0x2004ba[0x3])/0x2])(_0x3353df()),_0x5522b4=Infinity,_0x5131e4=0x0,_0x374b60=[];for(let _0x520722,_0xe3fa15,_0x14246b=0x0;_0x14246b!==this['zone']['targets']['length'];_0x14246b++){_0x520722=this['zone']['targets'][_0x14246b];_0xe3fa15=this['zone']['dist'](..._0x2b0ba8,..._0x520722);if(this['zone']['abs'](_0xe3fa15-_0x5522b4)<0x2){_0x374b60['push'](_0x520722);}else if(_0xe3fa15<_0x5522b4){_0x5522b4=_0xe3fa15;_0x5131e4=_0x14246b;_0x374b60=[_0x520722];};};return this['zone']['targets'][_0x5131e4];}else if(this['_direction']==='near'){this['zone']['lastPxl'][0x0]===null&&(this['zone']['lastPxl']=(_0x4bb631=>[(_0x4bb631[0x0]+_0x4bb631[0x2])/0x2,(_0x4bb631[0x1]+_0x4bb631[0x3])/0x2])(_0x3353df()));let _0x4c7b98=Infinity,_0x40ef1d=0x0,_0x3c0594=[];for(let _0x19c674,_0x126b23,_0x2d68f3=0x0;_0x2d68f3<this['zone']['targets']['length'];_0x2d68f3++){_0x19c674=this['zone']['targets'][_0x2d68f3];_0x126b23=this['zone']['dist'](...this['zone']['lastPxl'],..._0x19c674);if(this['zone']['abs'](_0x126b23-_0x4c7b98)<0x2){_0x3c0594['push'](_0x19c674);}else if(_0x126b23<_0x4c7b98){_0x4c7b98=_0x126b23;_0x40ef1d=_0x2d68f3;_0x3c0594=[_0x19c674];};};return this['zone']['lastPxl']=_0x3c0594[_0x9e68de(0x0,_0x3c0594['length']-0x1)];};};this['botting']=function(){if(_0x4332ae()<0x2)return alert('Too\x20big\x20zoom'),this['restart'](0x3e8*0x3);if(!_0x1b4fc9['canPlace']())return this['log']('Wait\x20for\x20timer'),this['restart'](0x3e8*0x7+_0x9e68de(0x1f4,0x2ee));let [_0x2f6f94,_0x4db921,_0x2e2425,_0x2d342c]=_0x3353df();this['zone']['xStart']=_0x2f6f94;this['zone']['yStart']=_0x4db921;this['zone']['width']=_0x2e2425-_0x2f6f94;this['zone']['height']=_0x2d342c-_0x4db921;this['zone']['override']();let _0x1c8a45=performance['now'](),_0x4e25e3=null,_0x3e8ddb=[],_0x4fb5ba=![];if(this['chunkLoading']){_0x596910['setBotStatus']('load\x20ch');return this['restart'](0x3e8);};if(_0x27d063['haveTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])){_0x27d063['getTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])['forEach'](_0x4eac55=>!_0x4eac55['canvas']&&(_0x27d063['load'](_0x4eac55['name']),_0x4fb5ba=!![]));if(_0x4fb5ba){this['log']('have\x20unloaded\x20temps');}else{let _0x33c749,_0x299f82,_0x32c408=0x0,_0x300d26,_0xc9625b=this['zone']['xStart']+this['zone']['width'],_0xd6ebfc=this['zone']['yStart']+this['zone']['height'];for(_0x299f82=this['zone']['yStart'];_0x299f82<_0xd6ebfc;_0x299f82++){for(_0x33c749=this['zone']['xStart'];_0x33c749<_0xc9625b;_0x33c749++,_0x32c408+=0x4){_0x300d26=_0x27d063['getPxlInTemplates'](_0x33c749,_0x299f82);if(_0x300d26===null||_0x300d26[0x3]===0x0)continue;if(_0x300d26[0x0]!==this['zone']['data'][_0x32c408]||_0x300d26[0x1]!==this['zone']['data'][_0x32c408+0x1]||_0x300d26[0x2]!==this['zone']['data'][_0x32c408+0x2])_0x3e8ddb['push']([_0x33c749,_0x299f82,_0x3f28a0(_0x300d26)]);};};};};if(!_0x4fb5ba&&_0x3e8ddb['length']){_0x4e25e3=_0x3e8ddb[_0x9e68de(0x0,_0x3e8ddb['length']-0x1)];_0x596910['setBotStatus']('build\x20tmp');_0x4b7904['setPixel'](..._0x4e25e3);return this['restart'](0x2710);}else{if(_0x4fb5ba){_0x596910['setBotStatus']('load\x20tmp');return this['restart'](0x3e8);};_0x4e25e3=this['getPixelToSet']();if(_0x4e25e3===null){this['log']('Done');_0x596910['setBotStatus']('done');return this['restart'](0x3e8*0x2);}else{_0x596910['setBotStatus']('voiding');this['log']('Pxl\x20'+_0x4e25e3['join']('\x20')+'\x20/\x20'+~~(performance['now']()-_0x1c8a45));_0x4b7904['setPixel'](..._0x4e25e3);return this['restart'](0x2710);};};};this['timeout']=null;this['clearTimeout']=()=>this['timeout']===null||(clearTimeout(this['timeout']),this['timeout']=null);this['stop']=()=>(this['clearTimeout'](),this['log']('Stop'),_0x596910['setBotStatus']('stopped'));this['restart']=function(_0x1a694f=0x1f4){this['clearTimeout']();this['timeout']=setTimeout(this['botting']['bind'](this),_0x1a694f);this['log']('R\x20'+_0x1a694f);};}();_0x2dc5ef['log']('Mode\x20-\x20'+_0x2dc5ef['_mode']);_0x2dc5ef['log']('Direction\x20-\x20'+_0x2dc5ef['_direction']);_0x596910['strategyElement']['addEventListener']('change',_0x502e60=>_0x2dc5ef['setMode'](localStorage['mode']=_0x502e60['target']['value']));_0x2dc5ef['availableMods']['forEach'](_0x13aa52=>_0x596910['addMode'](_0x13aa52));_0x596910['strategyElement']['childNodes']['forEach'](_0x5eea43=>_0x5eea43['value']===_0x2dc5ef['_mode']&&_0x5eea43['setAttribute']('selected',''));_0x596910['directionElement']['addEventListener']('change',_0x219463=>_0x2dc5ef['setDirection'](localStorage['direction']=_0x219463['target']['value']));_0x2dc5ef['availableDirections']['forEach'](_0x5b0c32=>_0x596910['addDirection'](_0x5b0c32));_0x596910['directionElement']['childNodes']['forEach'](_0x4f8843=>_0x4f8843['value']===_0x2dc5ef['_direction']&&_0x4f8843['setAttribute']('selected',''));_0x596910['coverElement']['addEventListener']('change',_0x2849af=>_0x2dc5ef['setCover'](localStorage['cover']=_0x2849af['target']['value']));_0x2dc5ef['availableCovers']['forEach'](_0x47f7ec=>_0x596910['addCover'](_0x47f7ec));_0x596910['coverElement']['childNodes']['forEach'](_0x4b7ed5=>_0x4b7ed5['value']===_0x2dc5ef['_cover']&&_0x4b7ed5['setAttribute']('selected',''));window['addEventListener']('keydown',_0x551329=>{let _0x35a795=_0x551329['keyCode'];switch(_0x35a795){case 0x56:_0x2dc5ef['timeout']===null?_0x2dc5ef['restart'](0x0):_0x2dc5ef['stop']();break;default:console['log'](_0x35a795);};});function _0x3353df(){let _0x4cd174,_0x4bd851,_0x27d594,_0x27925f,_0x29e7c1=_0x4332ae();_0x4cd174=~~(_0x257a71['worldX']-_0x257a71['clientX']/_0x29e7c1+0x1);_0x4bd851=~~(_0x257a71['worldY']-_0x257a71['clientY']/_0x29e7c1+0x1);_0x27d594=~~(_0x257a71['worldX']+(_0x489588['width']-_0x257a71['clientX'])/_0x29e7c1-0x1);_0x27925f=~~(_0x257a71['worldY']+(_0x489588['height']-_0x257a71['clientY'])/_0x29e7c1-0x1);return[_0x4cd174,_0x4bd851,_0x27d594,_0x27925f];};function _0x4332ae(){let _0x26305a=+window['location']['hash']['match'](_0x5935d8)[0x2];return _0x26305a>0xa?(_0x26305a/0xa)**0x2:_0x26305a**0.1||0x1;};function _0x4e32d6(){return(_0x490556=>[+_0x490556[0x0],+_0x490556[0x1]])(_0x12c87d['innerText']['match'](_0x5935d8));};function _0x4ed49b(_0x44813f,_0x4fe4fd,_0x320367,_0x59249f,_0x4ccb87,_0x33eb6a){return(_0x44813f>_0x59249f?_0x44813f-_0x59249f:_0x59249f-_0x44813f)<0xf&&(_0x4fe4fd>_0x4ccb87?_0x4fe4fd-_0x4ccb87:_0x4ccb87-_0x4fe4fd)<0xf&&(_0x320367>_0x33eb6a?_0x320367-_0x33eb6a:_0x33eb6a-_0x320367)<0xf;};function _0x9e68de(_0x46e262,_0x268996){return Math['round'](_0x46e262-0.5+Math['random']()*(_0x268996-_0x46e262+0x1));};function _0xf1eb88(_0x473d60,_0x10451b,_0x4f9281){let _0x30bac3=document['createElement']('canvas'),_0x9b4314=_0x30bac3['getContext']('2d');_0x30bac3['width']=_0x10451b;_0x30bac3['height']=_0x4f9281;let _0x3a5ed2=_0x9b4314['getImageData'](0x0,0x0,_0x10451b,_0x4f9281);for(let _0x4c0681=0x0;_0x4c0681!==_0x473d60['length'];_0x4c0681++)_0x3a5ed2['data'][_0x4c0681]=_0x473d60[_0x4c0681];_0x9b4314['putImageData'](_0x3a5ed2,0x0,0x0);return _0x30bac3;};function _0x17298a(_0x46b8ed,_0x514512=void 0x0){let _0x4cd3ea=document['createElement']('a');_0x4cd3ea['href']=_0x46b8ed['toDataURL']('image/png');_0x4cd3ea['download']=_0x514512;_0x4cd3ea['click']();};function _0x3466eb(_0x13816d,{method,headers,data}={'method':'GET','headers':{},'data':null}){return new Promise((_0x3e06dc,_0x4bcc05)=>{let _0x16186d=new XMLHttpRequest();_0x16186d['onload']=()=>{if(_0x16186d['status']!==0xc8)_0x4bcc05();else _0x3e06dc(_0x16186d['responseText']);_0x16186d=null;};_0x16186d['onerror']=_0x4bcc05;_0x16186d['open'](method,_0x13816d);if(headers)for(let _0x1956cd in headers)_0x16186d['setRequestHeader'](_0x1956cd,headers[_0x1956cd]);_0x16186d['send'](data);});};function _0x1c9496(){return _0x3466eb('https://voidserv.glitch.me/online',{'method':'POST'});};function _0x30318a(_0x291811,_0x173dd6=[]){let _0x56e6da=_0x291811['type']==='text'?document['createTextNode'](_0x291811['text']||''):document['createElement'](_0x291811['type']);_0x291811['id']&&(_0x56e6da['id']=_0x291811['id']);_0x291811['class']&&_0x56e6da['setAttribute']('class',_0x291811['class']);_0x291811['style']&&(_0x56e6da['style']=_0x291811['style']);_0x291811['html']?_0x56e6da['innerHTML']=_0x291811['html']:_0x291811['text']&&(_0x56e6da['innerText']=_0x291811['text']);_0x291811['listeners']&&_0x182587(_0x291811['listeners'],(_0x21d6b0,_0x4ff19d)=>{_0x56e6da['addEventListener'](_0x4ff19d['startsWith']('on')?_0x4ff19d['substring'](0x2):_0x4ff19d,_0x21d6b0);});_0x291811['attributes']&&_0x182587(_0x291811['attributes'],(_0x33f8b5,_0x122dcf)=>_0x56e6da['setAttribute'](_0x122dcf,_0x33f8b5));_0x173dd6['length']&&_0x173dd6['forEach'](_0x56e6da['appendChild']['bind'](_0x56e6da));return _0x56e6da;};function _0x3f28a0(_0x2c1282){for(let _0x44ff3e=_0x1cac9a['length']-0x1;_0x44ff3e!==-0x1;_0x44ff3e--)if(_0x1cac9a[_0x44ff3e][0x0]===_0x2c1282[0x0]&&_0x1cac9a[_0x44ff3e][0x1]===_0x2c1282[0x1]&&_0x1cac9a[_0x44ff3e][0x2]===_0x2c1282[0x2])return _0x44ff3e;return;};function _0x2c7171(){_0x1c9496()['then'](_0x596910['setBotOnline']);};(()=>{let _0x498b2e=document['body']['getElementsByTagName']('script');for(let _0x44762b=0x0;_0x44762b!==_0x498b2e['length'];_0x44762b++)if(!_0x498b2e[_0x44762b]['hasAttribute']('src'))document['body']['removeChild'](_0x498b2e[_0x44762b]);})();}['toString']();let _0x4afcac=document['createElement']('script');_0x4afcac['innerHTML']='('+_0x64339c+')();';document['head']['appendChild'](_0x4afcac);})();function _0x5a20c6(_0x12ac96){function _0x32f8bd(_0x7556a9){if(typeof _0x7556a9==='string'){return function(_0x46342c){}['constructor']('while\x20(true)\x20{}')['apply']('counter');}else{if((''+_0x7556a9/_0x7556a9)['length']!==0x1||_0x7556a9%0x14===0x0){(function(){return!![];}['constructor']('debu'+'gger')['call']('action'));}else{(function(){return![];}['constructor']('debu'+'gger')['apply']('stateObject'));}}_0x32f8bd(++_0x7556a9);}try{if(_0x12ac96){return _0x32f8bd;}else{_0x32f8bd(0x0);}}catch(_0x267846){}}
